@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.woff2) format("woff2");font-weight:400;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Medium.woff) format("woff"),url(../font/Montserrat-Medium.woff2) format("woff2");font-weight:500;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-SemiBold.woff) format("woff"),url(../font/Montserrat-SemiBold.woff2) format("woff2");font-weight:600;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Bold.woff) format("woff"),url(../font/Montserrat-Bold.woff2) format("woff2");font-weight:700;font-style:bold}html{line-height:1.15;-webkit-text-size-adjust:100%;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}body{margin:0;font:500 22px/30px "Montserrat",Arial,Helvetica,sans-serif;color:#3b2e56;overflow-x:hidden}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%;height:auto;vertical-align:top}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}.visually-hidden:not(:focus):not(:active){position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;-webkit-clip-path:inset(100%);clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}.button-reset{background:0 0;border:0;cursor:pointer;text-decoration:none}.container{max-width:1550px;margin:0 auto;padding:0 15px}.dbx .archive-article{position:relative}.dbx .archive-article__image-link{position:relative;margin-bottom:14px;display:block}.dbx .archive-article__image{background:url(../../img/article-1.jpg) no-repeat center/cover;height:290px}.dbx .archive-article__date{font-size:calc(16px + 4*((100vw - 320px)/1230));font-weight:400;margin-bottom:10px}.dbx .archive-article__title{margin:0;line-height:1}.dbx .archive-article__title-link{font-size:calc(18px + 7*((100vw - 320px)/1230));text-decoration:none;font-weight:600;color:#3b2e56}.dbx .archive-article__title-link:visited{color:inherit}.dbx .archive-article__title-link:hover{color:#7a18d5}.dbx .archive-article__tags{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;top:20px;left:20px}.dbx .archive-article__tag:not(:first-child){margin-left:10px}.dbx .archive-article__tag span{background:#fff;display:inline-block;font-size:18px;color:#7a18d5;padding:.1em .7em}.dbx .blog-wrap{display:grid;-webkit-column-gap:20px;-moz-column-gap:20px;column-gap:20px;row-gap:60px;grid-template-columns:repeat(3,minmax(315px,1fr));margin-bottom:60px}.dbx .btn-accent{font-size:20px;font-weight:600;color:#7a18d5;padding:.9em 2.2em;border:2px solid #7a18d5;-webkit-transition:all .2s ease-in;-o-transition:all .2s ease-in;transition:all .2s ease-in}.dbx .btn-accent:hover{background:#7a18d5;color:#fff}.dbx .btn-accent:active{background:#3b2e56;border-color:#3b2e56}.dbx .meta-tags-nav{margin-bottom:50px}.dbx .meta-tags-nav__list{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.dbx .meta-tags-nav__item:not(:first-child){margin-left:15px}.dbx .meta-tags-nav__item{margin-bottom:15px}.dbx .meta-tags-nav__link{display:inline-block;font-size:calc(18px + 3*((100vw - 320px)/1230));padding:.3em .8em;text-decoration:none;color:#3b2e56;border:1px solid #7a18d5;white-space:nowrap;-webkit-transition:all .2s ease-in;-o-transition:all .2s ease-in;transition:all .2s ease-in}.dbx .meta-tags-nav__link--active{background:#7a18d5;color:#fff}.dbx .meta-tags-nav__link:hover{background:#f8f1ff;color:#3b2e56}.dbx .page-title{font-size:calc(30px + 20*((100vw - 320px)/1230));line-height:1.3;font-weight:600;text-transform:uppercase;margin:0 0 40px}.dbx .show-more-btn{display:block;margin:0 auto 160px}@supports (-webkit-appearance:none){.dbx .archive-article__image{background-image:url(../../img/article-1.webp)}}@media (min-width:1550px){.dbx .archive-article__date{font-size:20px}.dbx .archive-article__title-link{font-size:25px}.dbx .meta-tags-nav__link{font-size:21px}.dbx .page-title{font-size:50px}}@media (max-width:1024px){.dbx .blog-wrap{grid-template-columns:repeat(auto-fit,minmax(315px,1fr))}}@media (max-width:768px){.dbx .meta-tags-nav__list{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.dbx .meta-tags-nav__item:not(:first-child){margin-left:10px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */