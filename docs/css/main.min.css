@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Regular.woff) format("woff"),url(../font/Montserrat-Regular.woff2) format("woff2");font-weight:400;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Medium.woff) format("woff"),url(../font/Montserrat-Medium.woff2) format("woff2");font-weight:500;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-SemiBold.woff) format("woff"),url(../font/Montserrat-SemiBold.woff2) format("woff2");font-weight:600;font-style:normal}@font-face{font-family:"Montserrat";font-display:swap;src:url(../font/Montserrat-Bold.woff) format("woff"),url(../font/Montserrat-Bold.woff2) format("woff2");font-weight:700;font-style:bold}html{line-height:1.15;-webkit-text-size-adjust:100%;-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;padding:0}body{margin:0;font:500 22px/30px "Montserrat",Arial,Helvetica,sans-serif;color:#3b2e56;overflow-x:hidden}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%;height:auto;vertical-align:top}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}.visually-hidden:not(:focus):not(:active){position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;-webkit-clip-path:inset(100%);clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}.button-reset{background:0 0;border:0;cursor:pointer;text-decoration:none}.container{max-width:1550px;margin:0 auto;padding:0 15px;width:auto}.dbx .archive-article{position:relative}.dbx .archive-article__image-link{position:relative;margin-bottom:14px;display:block}.dbx .archive-article__image{background:url(../../img/article-1.jpg) no-repeat center/cover;height:290px}.dbx .archive-article__date{font-size:calc(16px + 4*((100vw - 320px)/1230));font-weight:400;margin-bottom:10px}.dbx .archive-article__title{margin:0;line-height:1}.dbx .archive-article__title-link{font-size:calc(18px + 7*((100vw - 320px)/1230));text-decoration:none;font-weight:600;color:#3b2e56}.dbx .archive-article__title-link:visited{color:inherit}.dbx .archive-article__title-link:hover{color:#7a18d5}.dbx .archive-article__tags{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;top:20px;left:20px}.dbx .archive-article__tag:not(:first-child){margin-left:10px}.dbx .archive-article__tag span{background:#fff;display:inline-block;font-size:18px;color:#7a18d5;padding:.1em .7em}.dbx .blog-wrap{display:grid;-webkit-column-gap:20px;-moz-column-gap:20px;column-gap:20px;row-gap:60px;grid-template-columns:repeat(3,minmax(315px,1fr));margin-bottom:60px}.dbx .btn-accent{font-size:20px;font-weight:600;color:#7a18d5;padding:.9em 2.2em;border:2px solid #7a18d5;-webkit-transition:all .2s ease-in;-o-transition:all .2s ease-in;transition:all .2s ease-in}.dbx .btn-accent:hover{background:#7a18d5;color:#fff}.dbx .btn-accent:active{background:#3b2e56;border-color:#3b2e56}.dbx .meta-tags-nav{margin-bottom:50px}.dbx .meta-tags-nav__list{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.dbx .meta-tags-nav__item:not(:first-child){margin-left:15px}.dbx .meta-tags-nav__item{margin-bottom:15px}.dbx .meta-tags-nav__link{display:inline-block;font-size:calc(18px + 3*((100vw - 320px)/1230));padding:.3em .8em;text-decoration:none;color:#3b2e56;border:1px solid #7a18d5;white-space:nowrap;-webkit-transition:all .2s ease-in;-o-transition:all .2s ease-in;transition:all .2s ease-in}.dbx .meta-tags-nav__link--active{background:#7a18d5;color:#fff}.dbx .meta-tags-nav__link:hover{background:#f8f1ff;color:#3b2e56}.dbx .page-title{font-size:calc(30px + 20*((100vw - 320px)/1230));line-height:1.3;font-weight:600;text-transform:uppercase;margin:0 0 40px}.dbx .show-more-btn{display:block;margin:0 auto 160px}@supports (-webkit-appearance:none){.dbx .archive-article__image{background-image:url(../../img/article-1.webp)}}@media (min-width:1550px){.dbx .archive-article__date{font-size:20px}.dbx .archive-article__title-link{font-size:25px}.dbx .meta-tags-nav__link{font-size:21px}.dbx .page-title{font-size:50px}}@media (max-width:1024px){.dbx .blog-wrap{grid-template-columns:repeat(auto-fit,minmax(315px,1fr))}}@media (max-width:768px){.dbx .meta-tags-nav__list{overflow-x:auto;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.dbx .meta-tags-nav__item:not(:first-child){margin-left:10px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjYWZmb2xkaW5ncy9taXhpbnMuc2NzcyIsIm1haW4ubWluLmNzcyIsIm1haW4uY3NzIiwic2NhZmZvbGRpbmdzL25vcm1hbGl6ZS5zY3NzIiwic2NhZmZvbGRpbmdzL3NjYWZmb2xkaW5nLnNjc3MiLCJibG9jay9hcmNoaXZlLWFydGljbGUuc2NzcyIsImJsb2NrL2Jsb2ctd3JhcC5zY3NzIiwiYmxvY2svYnRuLWFjY2VudC5zY3NzIiwiYmxvY2svbWV0YS10YWdzLW5hdi5zY3NzIiwiYmxvY2svcGFnZS10aXRsZS5zY3NzIiwiYmxvY2svc2hvdy1tb3JlLWJ0bi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBLEFBSUksV0FDSSx3QixDQUNBLGlCLENBQ0EsNkcsQ0FFQSxlLENBQ0Esa0IsQUNGUixXREZRLHdCLENBQ0EsaUIsQ0FFQSwyRyxDQUNBLGUsQ0VHUixrQixBREdBLFdEVFEsd0IsQ0FFQSxpQixDQUNBLCtHLENFVVIsZSxDRmhCSSxrQixBQ29CSixXRGZRLHdCLENBQ0EsaUIsQ0VpQlIsdUcsQ0MzQkEsZSxDQUNJLGdCRitCSixJLENFM0JBLGdCLENBQ0ksNkIsQ0NMQSw2QixDSHFORixxQixDR3BORSxRLENBQ0EsUyxDRE1KLEksQ0FDSSxRLENDc0JBLDBELENBQ0EsYSxDQUNBLGlCLENEa0lKLE8sQ0F2SkEsSSxDQUNJLGEsQ0YrQkosRSxDRTNCQSxhLENBQ0ksYyxDRitCSixFLENDQUEsOEIsQ0RFRSxzQixDRTVCRixRLENBQ0ksZ0IsQ0ZvREosSSxDQUNBLEcsQ0FyQkEsRyxDQ29CQSxJLENDaERBLDRCLENGZ0NBLEMsQ0U1QkEsYyxDRmdDQSxXLENBQ0Usa0IsQ0FFQSx3QyxDRTdCRixnQyxDRCtCQSxDLENER0EsTSxDRTdCQSxrQixDRHFDQSxLLENER0UsYSxDQUdGLEcsQ0FDQSxHLENFN0JJLGEsQ0FDQSxhLENENkJKLGlCLENER0UsdUIsQ0NDRixHLENER0UsYSxDQ0NGLEcsQ0RHRSxTLENDQ0YsRyxDREdFLGlCLENHM0ZFLGMsQ0FDQSxXLENBQ0Esa0IsQ0g0RkosTSxDQUNBLEssQ0FDQSxRLENBQ0EsTSxDQUNBLFEsQ0U3Qkksc0IsQ0FDQSxRLENBR0osTSxDRitCQSxLLENFN0JJLGdCLENBR0osTSxDRitCQSxNLENFN0JJLG1CLENGa0NKLGEsQ0FDQSxZLENBQ0EsYSxDRWpDQSxNLENBSUkseUIsQ0ZrQ0osK0IsQ0FDQSw4QixDQUNBLCtCLENFakNBLHdCLENBSUksaUIsQ0FDQSxTLENGa0NKLDRCLENBQ0EsMkIsQ0FDQSw0QixDRWpDQSxxQixDQUlJLDZCLENBR0osUSxDQUNJLDBCLENBR0osTSxDQUVJLGEsQ0FDQSxhLENBQ0EsYyxDQUVBLGtCLENBR0osUSxDQUNJLHVCLENBR0osUSxDQUNJLGEsQ0FHSixlLENGZ0NBLFksQ0VqREEsTSxDQW1CSSw2QixDRmdDRixxQixDRS9CRSxTLENBR0osd0MsQ0ZpQ0Esd0MsQ0UvQkksVyxDQUdKLGEsQ0FDSSw0QixDQUNBLG1CLENBR0osd0MsQ0FDSSx1QixDQUdILDRCLENBQ0cseUIsQ0FDQSxZLENBT0osTyxDQUNJLGlCLENBT0osUSxDQUpBLFEsQ0FDSSxZLENDdktKLEMsQ0h1TkEsTyxDQURBLFEsQ0duTkksMEIsQ0hzTkYsa0IsQ0c3TUYscUJBQUEsTSxNQUFBLFEsQ0FDSSxpQixDQUNBLFMsQ0FDQSxVLENBQ0EsVyxDQUNBLFEsQ0FDQSxTLENBQ0Esa0IsQ0FDQSw2QixDSHVORixxQixDR3RORSxrQixDQUNBLGUsQ0hnT0osYSxDQ05BLGMsQ0RRRSxRLENHdE5GLGMsQ0FDSSxvQixDSDBOSixVLENDTkEsZ0IsQ0RRRSxhLENHdE5GLGMsQ0FDSSxVLENIME5KLHFCLENDTkEsaUIsQ0RVQSxpQyxDQ05BLGlCLENHdFFJLGtCLENBQ0ksYSxDSDBRUiw0QixDR3RRSSw4RCxDQUNJLFksQ0ppUlIsMkIsQ0k3UVEsK0MsQ0h3UVIsZSxDR3RRSSxrQixDSmlSSiw0QixDQ05BLFEsQ0YvUEksYSxDQzBRSixpQyxDQ05BLCtDLENHM1FJLG9CLENBQ0ksZSxDQUNBLGEsQ0pzUlIseUMsQ0lsUlEsYSxDSCtRUix1QyxDRjlRSSxhLENDeVJKLDJCLENDTkEsZSxDR2hSSSxRLENBQ0ksUyxDSGtSUixtQixDR2hSSSxtQixDQUNJLFksQ0hrUlIsaUIsQ0doUkksUSxDTFNBLFMsQ0NtUkosK0JJMVJRLGEsQ0FBQSxnQixDSjhSUiwrQixDSTNSUSxlLENIb1JSLG9CLENHbFJJLGMsQ0FDSSxhLENIb1JSLGlCLENEWUEsZSxDSTFSUSxZLENBQ0EsdUIsQ0FFQSxvQixDSGtSUixlLENJdFVBLFksQ0FDSSxpRCxDQUNBLGtCLENMbVZKLGdCLENLalZJLGMsQ0FLQSxlLENKb1VKLGEsQ0Z2U0ksa0IsQ010Q0osd0IsQ0wyVkUsa0MsQ0NWQSw2QixDQUNGLDBCLENEY0Esc0IsQ003Vkksa0IsQ0FDQSxVLENOaVdKLHVCLENNL1ZJLGtCLENMb1ZKLG9CLENEZ0JBLG1CLENDWkEsa0IsQ0RnQkEseUIsQ0NaQSxlLENNbFdBLFEsQ0FDSSxTLENOb1dKLG1CLENNbldJLG1CLENSMENBLFksQ0FDQSxrQixDQUNBLGMsQ0MyVUosOEJPclhRLGEsQ0FDQSxnQixDUlVKLHlCLENRYkEsa0IsQ1ArWEoseUIsQ0NoQkUsb0IsQ0FDRiwrQyxDTXZXSSxpQixDQUNJLG9CLENOeVdSLGEsQ0Z0V0ksd0IsQ1FKQSxrQixDUDhYRixrQyxDQ2hCQSw2QixDQUNGLDBCLENBR0EsaUMsQ016V0ksa0IsQ0FDSSxVLENQOFhSLCtCLENPMVhRLGtCLENBQ0EsYSxDUDhYUixnQixDTzVYUSxnRCxDTjJXUixlLENGN1dJLGUsQ1FOQSx3QixDTnVYRixlLENEc0JGLG1CLENDakJBLGEsQ005V1EsbUIsQ05rWFIsV0FBQSx1QixFT3BaQSw0QixDVHlESSxnRCxBQ29YSiwwQlF2YUksMkIsQ1BzWkosYyxDRHNCRSxpQyxDQ2xCQSxjLENRL1pFLHlCLENBQ0EsYyxDUnFhSixnQixDQUNBLGdCLEFEMkJBLDBCQ2xCQSxlLENEb0JJLDBELEFBUUoseUJDbEJDLHlCLENEb0JHLGUsQ0NsQkosb0IsQ0RvQkksZ0IsQ0NoQkosOEJBQUEsYSxDRG9CSSxrQiIsImZpbGUiOiJtYWluLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvL2xheXVvdXQgKyBwYWRkaW5nXHJcbiRtYXhXaWR0aDogMTU1MDtcclxuXHJcbkBtaXhpbiBmb250KCRmb250X25hbWUsICRmaWxlX25hbWUsICR3ZWlnaHQsICRzdHlsZSkge1xyXG4gICAgQGZvbnQtZmFjZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250X25hbWU7XHJcbiAgICAgICAgZm9udC1kaXNwbGF5OiBzd2FwO1xyXG4gICAgICAgIHNyYzogdXJsKFwiLi4vZm9udC8jeyRmaWxlX25hbWV9LndvZmZcIikgZm9ybWF0KFwid29mZlwiKSxcclxuICAgICAgICB1cmwoXCIuLi9mb250LyN7JGZpbGVfbmFtZX0ud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6ICN7JHdlaWdodH07XHJcbiAgICAgICAgZm9udC1zdHlsZTogI3skc3R5bGV9O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWQge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZC1taW4ge1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuQG1peGluIGRlc2t0b3AtbWluIHtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWF4V2lkdGggKyBweCkge1xyXG4gICAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gbGcge1xyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBkdCB7XHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtaXhpbiBsaXN0LXJlc2V0IHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5AaW5jbHVkZSBmb250KFwiTW9udHNlcnJhdFwiLFwiTW9udHNlcnJhdC1SZWd1bGFyXCIsXCI0MDBcIixcIm5vcm1hbFwiKTtcclxuQGluY2x1ZGUgZm9udChcIk1vbnRzZXJyYXRcIixcIk1vbnRzZXJyYXQtTWVkaXVtXCIsXCI1MDBcIixcIm5vcm1hbFwiKTtcclxuQGluY2x1ZGUgZm9udChcIk1vbnRzZXJyYXRcIixcIk1vbnRzZXJyYXQtU2VtaUJvbGRcIixcIjYwMFwiLFwibm9ybWFsXCIpO1xyXG5AaW5jbHVkZSBmb250KFwiTW9udHNlcnJhdFwiLFwiTW9udHNlcnJhdC1Cb2xkXCIsXCI3MDBcIixcImJvbGRcIik7XHJcblxyXG5AbWl4aW4gYWRhcHRpdi1mb250KCRwY1NpemUsICRtb2JTaXplKSB7XHJcbiAgICAkYWRkU2l6ZTogJHBjU2l6ZSAtICRtb2JTaXplO1xyXG4gICAgJG1heFdpZHRoOiAkbWF4V2lkdGggLSAzMjA7XHJcbiAgICBmb250LXNpemU6IGNhbGMoI3skbW9iU2l6ZSArIHB4fSArICN7JGFkZFNpemV9ICogKCgxMDB2dyAtIDMyMHB4KSAvICN7JG1heFdpZHRofSkpO1xyXG4gICAgQGluY2x1ZGUgZGVza3RvcC1taW4ge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogI3skcGNTaXplICsgcHh9O1xyXG4gICAgfVxyXG59IiwiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtTWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtU2VtaUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtU2VtaUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc3R5bGU6IGJvbGQ7XG59XG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbmhyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbnByZSB7XG4gIGZvbnQ6IDFlbSBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbn1cblxuYSB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xufVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250OiAxZW0gbW9ub3NwYWNlLCBtb25vc3BhY2U7XG59XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udDogMTAwJS8xLjE1IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbn1cblxuYnV0dG9uLFxuaW5wdXQge1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbmJ1dHRvbixcblt0eXBlPWJ1dHRvbl0sXG5bdHlwZT1yZXNldF0sXG5bdHlwZT1zdWJtaXRdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPWJ1dHRvbl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1zdWJtaXRdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1idXR0b25dOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9cmVzZXRdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9c3VibWl0XTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XG59XG5cbmxlZ2VuZCB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG5bdHlwZT1jaGVja2JveF0sXG5bdHlwZT1yYWRpb10ge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDA7XG59XG5cblt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG5bdHlwZT1zZWFyY2hdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xufVxuXG5bdHlwZT1zZWFyY2hdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmh0bWwge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuKixcbio6OmJlZm9yZSxcbio6OmFmdGVyIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBpbmhlcml0O1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLnZpc3VhbGx5LWhpZGRlbjpub3QoOmZvY3VzKTpub3QoOmFjdGl2ZSkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLXdlYmtpdC1jbGlwLXBhdGg6IGluc2V0KDEwMCUpO1xuICBjbGlwLXBhdGg6IGluc2V0KDEwMCUpO1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5ib2R5IHtcbiAgZm9udDogNTAwIDIycHgvMzBweCBcIk1vbnRzZXJyYXRcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgY29sb3I6ICMzQjJFNTY7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmJ1dHRvbi1yZXNldCB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxNTUwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwIDE1cHg7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZGJ4IC5hcmNoaXZlLWFydGljbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5kYnggLmFyY2hpdmUtYXJ0aWNsZV9faW1hZ2UtbGluayB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5kYnggLmFyY2hpdmUtYXJ0aWNsZV9faW1hZ2Uge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi8uLi9pbWcvYXJ0aWNsZS0xLmpwZ1wiKSBuby1yZXBlYXQgY2VudGVyL2NvdmVyO1xuICBoZWlnaHQ6IDI5MHB4O1xufVxuXG4uZGJ4IC5hcmNoaXZlLWFydGljbGVfX2RhdGUge1xuICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTIzMCkpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uZGJ4IC5hcmNoaXZlLWFydGljbGVfX3RpdGxlIHtcbiAgbWFyZ2luOiAwO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190aXRsZS1saW5rIHtcbiAgZm9udC1zaXplOiBjYWxjKDE4cHggKyA3ICogKCgxMDB2dyAtIDMyMHB4KSAvIDEyMzApKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogIzNCMkU1Njtcbn1cblxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190aXRsZS1saW5rOnZpc2l0ZWQge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190aXRsZS1saW5rOmhvdmVyIHtcbiAgY29sb3I6ICM3QTE4RDU7XG59XG5cbi5kYnggLmFyY2hpdmUtYXJ0aWNsZV9fdGFncyB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMjBweDtcbn1cblxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190YWc6bm90KDpmaXJzdC1jaGlsZCkge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190YWcgc3BhbiB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC1zaXplOiAxOHB4O1xuICBjb2xvcjogIzdBMThENTtcbiAgcGFkZGluZzogMC4xZW0gMC43ZW07XG59XG5cbi5kYnggLmJsb2ctd3JhcCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIC13ZWJraXQtY29sdW1uLWdhcDogMjBweDtcbiAgLW1vei1jb2x1bW4tZ2FwOiAyMHB4O1xuICBjb2x1bW4tZ2FwOiAyMHB4O1xuICByb3ctZ2FwOiA2MHB4O1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCBtaW5tYXgoMzE1cHgsIDFmcikpO1xuICBtYXJnaW4tYm90dG9tOiA2MHB4O1xufVxuXG4uZGJ4IC5idG4tYWNjZW50IHtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBmb250LXdlaWdodDogNjAwO1xuICBjb2xvcjogIzdBMThENTtcbiAgcGFkZGluZzogMC45ZW0gMi4yZW07XG4gIGJvcmRlcjogMnB4IHNvbGlkICM3QTE4RDU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbjtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbjtcbn1cblxuLmRieCAuYnRuLWFjY2VudDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICM3QTE4RDU7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4uZGJ4IC5idG4tYWNjZW50OmFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6ICMzQjJFNTY7XG4gIGJvcmRlci1jb2xvcjogIzNCMkU1Njtcbn1cblxuLmRieCAubWV0YS10YWdzLW5hdiB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5kYnggLm1ldGEtdGFncy1uYXZfX2xpc3Qge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uZGJ4IC5tZXRhLXRhZ3MtbmF2X19pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5cbi5kYnggLm1ldGEtdGFncy1uYXZfX2l0ZW0ge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4uZGJ4IC5tZXRhLXRhZ3MtbmF2X19saW5rIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IGNhbGMoMThweCArIDMgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTIzMCkpO1xuICBwYWRkaW5nOiAwLjNlbSAwLjhlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzNCMkU1NjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzdBMThENTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xufVxuXG4uZGJ4IC5tZXRhLXRhZ3MtbmF2X19saW5rLS1hY3RpdmUge1xuICBiYWNrZ3JvdW5kOiAjN0ExOEQ1O1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmRieCAubWV0YS10YWdzLW5hdl9fbGluazpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNGOEYxRkY7XG4gIGNvbG9yOiAjM0IyRTU2O1xufVxuXG4uZGJ4IC5wYWdlLXRpdGxlIHtcbiAgZm9udC1zaXplOiBjYWxjKDMwcHggKyAyMCAqICgoMTAwdncgLSAzMjBweCkgLyAxMjMwKSk7XG4gIGxpbmUtaGVpZ2h0OiAxLjM7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuLmRieCAuc2hvdy1tb3JlLWJ0biB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMTYwcHg7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcbiAgLmRieCAuYXJjaGl2ZS1hcnRpY2xlX19pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vLi4vaW1nL2FydGljbGUtMS53ZWJwXCIpO1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxNTUwcHgpIHtcbiAgLmRieCAuYXJjaGl2ZS1hcnRpY2xlX19kYXRlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cblxuICAuZGJ4IC5hcmNoaXZlLWFydGljbGVfX3RpdGxlLWxpbmsge1xuICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgfVxuXG4gIC5kYnggLm1ldGEtdGFncy1uYXZfX2xpbmsge1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgfVxuXG4gIC5kYnggLnBhZ2UtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuZGJ4IC5ibG9nLXdyYXAge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMzE1cHgsIDFmcikpO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmRieCAubWV0YS10YWdzLW5hdl9fbGlzdCB7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICAtbXMtZmxleC13cmFwOiBub3dyYXA7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gIH1cblxuICAuZGJ4IC5tZXRhLXRhZ3MtbmF2X19pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKSB7XG5cbn1cbn1cclxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5OallXWm1iMnhrYVc1bmN5OXRhWGhwYm5NdWMyTnpjeUlzSW0xaGFXNHVZM056SWl3aWMyTmhabVp2YkdScGJtZHpMMjV2Y20xaGJHbDZaUzV6WTNOeklpd2ljMk5oWm1admJHUnBibWR6TDNOallXWm1iMnhrYVc1bkxuTmpjM01pTENKelkyRm1abTlzWkdsdVozTXZkbUZ5YVdGaWJHVnpMbk5qYzNNaUxDSmliRzlqYXk5aGNtTm9hWFpsTFdGeWRHbGpiR1V1YzJOemN5SXNJbUpzYjJOckwySnNiMmN0ZDNKaGNDNXpZM056SWl3aVlteHZZMnN2WW5SdUxXRmpZMlZ1ZEM1elkzTnpJaXdpWW14dlkyc3ZiV1YwWVMxMFlXZHpMVzVoZGk1elkzTnpJaXdpWW14dlkyc3ZjR0ZuWlMxMGFYUnNaUzV6WTNOeklpd2lZbXh2WTJzdmMyaHZkeTF0YjNKbExXSjBiaTV6WTNOeklsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVbEpPMFZCUTBrc2VVSkJORU5OTzBWQk0wTk9MR3RDUVVGQk8wVkJRMEVzYlVoQlFVRTdSVUZGUVN4blFrRkJRVHRGUVVOQkxHdENRVUZCTzBGRFNsSTdRVVJHU1R0RlFVTkpMSGxDUVRaRFRUdEZRVFZEVGl4clFrRkJRVHRGUVVOQkxHbElRVUZCTzBWQlJVRXNaMEpCUVVFN1JVRkRRU3hyUWtGQlFUdEJRMGRTTzBGRVZFazdSVUZEU1N4NVFrRTRRMDA3UlVFM1EwNHNhMEpCUVVFN1JVRkRRU3h4U0VGQlFUdEZRVVZCTEdkQ1FVRkJPMFZCUTBFc2EwSkJRVUU3UVVOVlVqdEJSR2hDU1R0RlFVTkpMSGxDUVN0RFRUdEZRVGxEVGl4clFrRkJRVHRGUVVOQkxEWkhRVUZCTzBWQlJVRXNaMEpCUVVFN1JVRkRRU3huUWtGQlFUdEJRMmxDVWp0QlF6TkNRVHRGUVVOSkxHbENRVUZCTzBWQlEwRXNPRUpCUVVFN1FVUTJRa283TzBGRE1VSkJPMFZCUTBrc1UwRkJRVHRCUkRaQ1NqczdRVU14UWtFN1JVRkRTU3hqUVVGQk8wRkVOa0pLT3p0QlF6RkNRVHRGUVVOSkxHTkJRVUU3UlVGRFFTeG5Ra0ZCUVR0QlJEWkNTanM3UVVNeFFrRTdSVUZEU1N3clFrRkJRVHRWUVVGQkxIVkNRVUZCTzBWQlEwRXNVMEZCUVR0RlFVTkJMR2xDUVVGQk8wRkVOa0pLT3p0QlF6RkNRVHRGUVVOSkxHbERRVUZCTzBWQlEwRXNZMEZCUVR0QlJEWkNTanM3UVVNeFFrRTdSVUZEU1N3MlFrRkJRVHRCUkRaQ1NqczdRVU14UWtFN1JVRkRTU3h0UWtGQlFUdEZRVU5CTERCQ1FVRkJPMFZCUTBFc2VVTkJRVUU3VlVGQlFTeHBRMEZCUVR0QlJEWkNTanM3UVVNeFFrRTdPMFZCUlVrc2JVSkJRVUU3UVVRMlFrbzdPMEZETVVKQk96czdSVUZIU1N4cFEwRkJRVHRGUVVOQkxHTkJRVUU3UVVRMlFrbzdPMEZETVVKQk8wVkJRMGtzWTBGQlFUdEJSRFpDU2pzN1FVTXhRa0U3TzBWQlJVa3NZMEZCUVR0RlFVTkJMR05CUVVFN1JVRkRRU3hyUWtGQlFUdEZRVU5CTEhkQ1FVRkJPMEZFTmtKS096dEJRekZDUVR0RlFVTkpMR1ZCUVVFN1FVUTJRa283TzBGRE1VSkJPMFZCUTBrc1YwRkJRVHRCUkRaQ1NqczdRVU14UWtFN1JVRkRTU3hyUWtGQlFUdEJSRFpDU2pzN1FVTXhRa0U3T3pzN08wVkJTMGtzYjBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeFRRVUZCTzBGRU5rSktPenRCUXpGQ1FUczdSVUZGU1N4cFFrRkJRVHRCUkRaQ1NqczdRVU14UWtFN08wVkJSVWtzYjBKQlFVRTdRVVEyUWtvN08wRkRNVUpCT3pzN08wVkJTVWtzTUVKQlFVRTdRVVEyUWtvN08wRkRNVUpCT3pzN08wVkJTVWtzYTBKQlFVRTdSVUZEUVN4VlFVRkJPMEZFTmtKS096dEJRekZDUVRzN096dEZRVWxKTERoQ1FVRkJPMEZFTmtKS096dEJRekZDUVR0RlFVTkpMRGhDUVVGQk8wRkVOa0pLT3p0QlF6RkNRVHRGUVVOSkxEaENRVUZCTzFWQlFVRXNjMEpCUVVFN1JVRkRRU3hqUVVGQk8wVkJRMEVzWTBGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4VlFVRkJPMFZCUTBFc2JVSkJRVUU3UVVRMlFrbzdPMEZETVVKQk8wVkJRMGtzZDBKQlFVRTdRVVEyUWtvN08wRkRNVUpCTzBWQlEwa3NZMEZCUVR0QlJEWkNTanM3UVVNeFFrRTdPMFZCUlVrc09FSkJRVUU3VlVGQlFTeHpRa0ZCUVR0RlFVTkJMRlZCUVVFN1FVUTJRa283TzBGRE1VSkJPenRGUVVWSkxGbEJRVUU3UVVRMlFrbzdPMEZETVVKQk8wVkJRMGtzTmtKQlFVRTdSVUZEUVN4dlFrRkJRVHRCUkRaQ1NqczdRVU14UWtFN1JVRkRTU3gzUWtGQlFUdEJSRFpDU2pzN1FVTXhRa003UlVGRFJ5d3dRa0ZCUVR0RlFVTkJMR0ZCUVVFN1FVUTJRa283TzBGRE1VSkJPMFZCUTBrc1kwRkJRVHRCUkRaQ1NqczdRVU14UWtFN1JVRkRTU3hyUWtGQlFUdEJSRFpDU2pzN1FVTXhRa0U3UlVGRFNTeGhRVUZCTzBGRU5rSktPenRCUXpGQ1FUdEZRVU5KTEdGQlFVRTdRVVEyUWtvN08wRkZPVTFCTzBWQlEwa3NPRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEZRVU5CTEZOQlFVRTdSVUZEUVN4VlFVRkJPMEZHYVU1S096dEJSVGxOUVRzN08wVkJSMGtzTWtKQlFVRTdWVUZCUVN4dFFrRkJRVHRCUm1sT1NqczdRVVU1VFVFN1JVRkRTU3hsUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEcxQ1FVRkJPMEZHYVU1S096dEJSVGxOUVR0RlFVTkpMR3RDUVVGQk8wVkJRMEVzVlVGQlFUdEZRVU5CTEZkQlFVRTdSVUZEUVN4WlFVRkJPMFZCUTBFc1UwRkJRVHRGUVVOQkxGVkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMRGhDUVVGQk8xVkJRVUVzYzBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxHZENRVUZCTzBGR2FVNUtPenRCUlRsTlFUdEZRVU5KTEdWQlFVRTdSVUZEUVN4blFrRkJRVHRGUVVOQkxIVkVRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hqUTI1RFZUdEZSRzlEVml4clFrRkJRVHRCUm1sT1NqczdRVVU1VFVFN1JVRkRTU3cyUWtGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2NVSkJRVUU3UVVacFRrbzdPMEZGT1UxQk8wVkJRMGtzYVVKQlFVRTdSVUZEUVN4alFVRkJPMFZCUTBFc1pVRkJRVHRGUVVOQkxGZEJRVUU3UVVacFRrbzdPMEZKY0ZGQk8wVkJRMGtzYTBKQlFVRTdRVXAxVVVvN1FVbDBVVWs3UlVGRFNTeHJRa0ZCUVR0RlFVTkJMRzFDUVVGQk8wVkJRMEVzWTBGQlFUdEJTbmRSVWp0QlNYUlJTVHRGUVVOSkxHRkJRVUU3UlVGRFFTeG5SRUZCUVR0RlFVTkJMRFJDUVVGQk8wVkJRMEVzTWtKQlFVRTdSVUZEUVN4elFrRkJRVHRCU25kUlVqdEJTWFJSU1R0RlRESkRRU3h2UkVGQlFUdEZTM3BEU1N4blFrRkJRVHRGUVVOQkxHMUNRVUZCTzBGS2QxRlNPMEZFTDFCSk8wVkxXa0U3U1V3MlEwa3NaVUZCUVR0RlEydFBUanRCUVVOR08wRkpNMUZKTzBWQlEwa3NVMEZCUVR0RlFVTkJMR05CUVVFN1FVbzJVVkk3UVVrelVVazdSVXhyUTBFc2IwUkJRVUU3UlV0b1Ewa3NjVUpCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEdORU1VSk5PMEZJZFZOa08wRkVPVkZKTzBWTFNFRTdTVXh2UTBrc1pVRkJRVHRGUTJsUVRqdEJRVU5HTzBGSmFGSkpPMFZCUTBrc1kwRkJRVHRCU210U1VqdEJTV2hTU1R0RlFVTkpMR05FYWtORE8wRkliVlJVTzBGSmFGSkpPMFZNVTBFc1owSkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNWVUZCUVR0RlMxUkpMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeFRRVUZCTzBWQlEwRXNWVUZCUVR0QlNtOVNVanRCU1d4U1NUdEZRVU5KTEdsQ1FVRkJPMEZLYjFKU08wRkpiRkpKTzBWQlEwa3NjVUpCUVVFN1JVRkZRU3hsUVVGQk8wVkJRMEVzWTBScVJFTTdSVU5yUkVRc2MwSkJRVUU3UlVGRlFTeHZRa0ZCUVR0QlNtdFNVanRCUzNSVlFUdEZRVU5KTEdGQlFVRTdSVUZEUVN4M1FrRkJRVHRMUVVGQkxIRkNRVUZCTzFWQlFVRXNaMEpCUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzYjBSQlFVRTdSVUZMUVN4dFFrRkJRVHRCVEc5VlNqdEJSSFpUU1R0RlRYUkRTanRKUVUxUkxESkVRVUZCTzBWTU1sVk9PMEZCUTBZN1FVMXNWa0U3UlVGRFNTeGxRVUZCTzBWQlEwRXNaMEpCUVVFN1JVRkRRU3hqU0VoTE8wVkhTVXdzYjBKQlFVRTdSVUZEUVN4NVFrRkJRVHRGUVVOQkxHOURRVUZCTzBWQlFVRXNLMEpCUVVFN1JVRkJRU3cwUWtGQlFUdEJUbTlXU2p0QlRXeFdTVHRGUVVOSkxIbENTRlJETzBWSFZVUXNWMEZCUVR0QlRtOVdVanRCVFdwV1NUdEZRVU5KTEhsQ1NHSk5PMFZIWTA0c2NVSklaRTA3UVVocFYyUTdRVTlzVjBFN1JVRkRTU3h0UWtGQlFUdEJVRzlYU2p0QlQyNVhTVHRGVWpCRFFTeG5Ra0ZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3hWUVVGQk8wVlJNVU5KTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNiVUpCUVVFN1RVRkJRU3hsUVVGQk8wRlFkVmRTTzBGRU4xWkpPMFZSWWtFN1NVRkxVU3huUWtGQlFUdEpRVU5CTEhGQ1FVRkJPMUZCUVVFc2FVSkJRVUU3UlZCNVYxWTdRVUZEUmp0QlQzWlhTVHRGUVVOSkxHbENRVUZCTzBGUWVWZFNPMEZFZEZkSk8wVlJTa0U3U1VGSFVTeHBRa0ZCUVR0RlVESlhWanRCUVVOR08wRlBlbGRKTzBWQlEwa3NiVUpCUVVFN1FWQXlWMUk3UVU5NlYwazdSVUZEU1N4eFFrRkJRVHRGVW05RFNpeHZSRUZCUVR0RlVXeERTU3h2UWtGQlFUdEZRVU5CTEhGQ1FVRkJPMFZCUTBFc1kwcDRRazA3UlVsNVFrNHNlVUpCUVVFN1JVRkRRU3h0UWtGQlFUdEZRVU5CTEc5RFFVRkJPMFZCUVVFc0swSkJRVUU3UlVGQlFTdzBRa0ZCUVR0QlVESlhVanRCUkRkWFNUdEZVVTVCTzBsU2RVTkpMR1ZCUVVFN1JVTm5WazQ3UVVGRFJqdEJUemxYVVR0RlFVTkpMSGxDU2k5Q1NEdEZTV2REUnl4WFFVRkJPMEZRWjFoYU8wRlBPVmRSTzBWQlEwa3NlVUpLYWtOSE8wVkphME5JTEdOS2JrTkZPMEZJYlZwa08wRlJjRnBCTzBWVWVVUkpMSEZFUVVGQk8wVlRka1JCTEdkQ1FVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeDVRa0ZCUVR0RlFVTkJMRk5CUVVFN1JVRkRRU3h0UWtGQlFUdEJVbk5hU2p0QlJHeFpTVHRGVXpGQ1NqdEpWREpFVVN4bFFVRkJPMFZEY1ZkT08wRkJRMFk3UVZOcVlVRTdSVUZEU1N4alFVRkJPMFZCUTBFc1kwRkJRVHRGUVVOQkxHOUNRVUZCTzBGVWJXRktPMEZCUTBFN1FVRkRRU3cyUWtGQk5rSXNaMFJCUVdkRU8wRkJRemRGT3p0RFFVVkRPenRCUVVWRU96dEJRVVZCT3p0QlFVVkJPenREUVVWRE96dEJRVVZFT3p0QlFVVkJPenRCUVVWQk96dERRVVZET3p0QlFVVkVPenRCUVVWQk96dEJRVVZCSWl3aVptbHNaU0k2SW0xaGFXNHVZM056SWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUx5OXNZWGwxYjNWMElDc2djR0ZrWkdsdVoxeHlYRzRrYldGNFYybGtkR2c2SURFMU5UQTdYSEpjYmx4eVhHNUFiV2w0YVc0Z1ptOXVkQ2drWm05dWRGOXVZVzFsTENBa1ptbHNaVjl1WVcxbExDQWtkMlZwWjJoMExDQWtjM1I1YkdVcElIdGNjbHh1SUNBZ0lFQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQWtabTl1ZEY5dVlXMWxPMXh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRaR2x6Y0d4aGVUb2djM2RoY0R0Y2NseHVJQ0FnSUNBZ0lDQnpjbU02SUhWeWJDaGNJaTR1TDJadmJuUXZJM3NrWm1sc1pWOXVZVzFsZlM1M2IyWm1YQ0lwSUdadmNtMWhkQ2hjSW5kdlptWmNJaWtzWEhKY2JpQWdJQ0FnSUNBZ2RYSnNLRndpTGk0dlptOXVkQzhqZXlSbWFXeGxYMjVoYldWOUxuZHZabVl5WENJcElHWnZjbTFoZENoY0luZHZabVl5WENJcE8xeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBamV5UjNaV2xuYUhSOU8xeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGMzUjViR1U2SUNON0pITjBlV3hsZlR0Y2NseHVJQ0FnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlHMWtJSHRjY2x4dUlDQWdJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTmpod2VDa2dlMXh5WEc0Z0lDQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNUFiV2w0YVc0Z2JXUXRiV2x1SUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldsdUxYZHBaSFJvT2lBM05qaHdlQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JrQnRhWGhwYmlCa1pYTnJkRzl3TFcxcGJpQjdYSEpjYmlBZ0lDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dKRzFoZUZkcFpIUm9JQ3NnY0hncElIdGNjbHh1SUNBZ0lDQWdJQ0JBWTI5dWRHVnVkRHRjY2x4dUlDQWdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMXBlR2x1SUd4bklIdGNjbHh1SUNBZ0lFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTVPVEp3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnWkhRZ2UxeHlYRzRnSUNBZ1FHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXdNalJ3ZUNrZ2UxeHlYRzRnSUNBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc1OVhISmNibHh5WEc1QWJXbDRhVzRnYkdsemRDMXlaWE5sZENCN1hISmNiaUFnSUNCc2FYTjBMWE4wZVd4bE9pQnViMjVsTzF4eVhHNGdJQ0FnYldGeVoybHVPaUF3TzF4eVhHNGdJQ0FnY0dGa1pHbHVaem9nTUR0Y2NseHVmVnh5WEc1Y2NseHVRR2x1WTJ4MVpHVWdabTl1ZENoY0lrMXZiblJ6WlhKeVlYUmNJaXhjSWsxdmJuUnpaWEp5WVhRdFVtVm5kV3hoY2x3aUxGd2lOREF3WENJc1hDSnViM0p0WVd4Y0lpazdYSEpjYmtCcGJtTnNkV1JsSUdadmJuUW9YQ0pOYjI1MGMyVnljbUYwWENJc1hDSk5iMjUwYzJWeWNtRjBMVTFsWkdsMWJWd2lMRndpTlRBd1hDSXNYQ0p1YjNKdFlXeGNJaWs3WEhKY2JrQnBibU5zZFdSbElHWnZiblFvWENKTmIyNTBjMlZ5Y21GMFhDSXNYQ0pOYjI1MGMyVnljbUYwTFZObGJXbENiMnhrWENJc1hDSTJNREJjSWl4Y0ltNXZjbTFoYkZ3aUtUdGNjbHh1UUdsdVkyeDFaR1VnWm05dWRDaGNJazF2Ym5SelpYSnlZWFJjSWl4Y0lrMXZiblJ6WlhKeVlYUXRRbTlzWkZ3aUxGd2lOekF3WENJc1hDSmliMnhrWENJcE8xeHlYRzVjY2x4dVFHMXBlR2x1SUdGa1lYQjBhWFl0Wm05dWRDZ2tjR05UYVhwbExDQWtiVzlpVTJsNlpTa2dlMXh5WEc0Z0lDQWdKR0ZrWkZOcGVtVTZJQ1J3WTFOcGVtVWdMU0FrYlc5aVUybDZaVHRjY2x4dUlDQWdJQ1J0WVhoWGFXUjBhRG9nSkcxaGVGZHBaSFJvSUMwZ016SXdPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUJqWVd4aktDTjdKRzF2WWxOcGVtVWdLeUJ3ZUgwZ0t5QWpleVJoWkdSVGFYcGxmU0FxSUNnb01UQXdkbmNnTFNBek1qQndlQ2tnTHlBamV5UnRZWGhYYVdSMGFIMHBLVHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR1JsYzJ0MGIzQXRiV2x1SUh0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhOcGVtVTZJQ043SkhCalUybDZaU0FySUhCNGZUdGNjbHh1SUNBZ0lIMWNjbHh1ZlNJc0lrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJN1hHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MEwwMXZiblJ6WlhKeVlYUXRVbVZuZFd4aGNpNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxU1pXZDFiR0Z5TG5kdlptWXlYQ0lwSUdadmNtMWhkQ2hjSW5kdlptWXlYQ0lwTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTkRBd08xeHVJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3WEc1OVhHNUFabTl1ZEMxbVlXTmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVFc5dWRITmxjbkpoZEZ3aU8xeHVJQ0JtYjI1MExXUnBjM0JzWVhrNklITjNZWEE3WEc0Z0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRDOU5iMjUwYzJWeWNtRjBMVTFsWkdsMWJTNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxTlpXUnBkVzB1ZDI5bVpqSmNJaWtnWm05eWJXRjBLRndpZDI5bVpqSmNJaWs3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN1hHNGdJR1p2Ym5RdGMzUjViR1U2SUc1dmNtMWhiRHRjYm4xY2JrQm1iMjUwTFdaaFkyVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJN1hHNGdJR1p2Ym5RdFpHbHpjR3hoZVRvZ2MzZGhjRHRjYmlBZ2MzSmpPaUIxY213b1hDSXVMaTltYjI1MEwwMXZiblJ6WlhKeVlYUXRVMlZ0YVVKdmJHUXVkMjltWmx3aUtTQm1iM0p0WVhRb1hDSjNiMlptWENJcExDQjFjbXdvWENJdUxpOW1iMjUwTDAxdmJuUnpaWEp5WVhRdFUyVnRhVUp2YkdRdWQyOW1aakpjSWlrZ1ptOXliV0YwS0Z3aWQyOW1aakpjSWlrN1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBMk1EQTdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JuMWNia0JtYjI1MExXWmhZMlVnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKTmIyNTBjMlZ5Y21GMFhDSTdYRzRnSUdadmJuUXRaR2x6Y0d4aGVUb2djM2RoY0R0Y2JpQWdjM0pqT2lCMWNtd29YQ0l1TGk5bWIyNTBMMDF2Ym5SelpYSnlZWFF0UW05c1pDNTNiMlptWENJcElHWnZjbTFoZENoY0luZHZabVpjSWlrc0lIVnliQ2hjSWk0dUwyWnZiblF2VFc5dWRITmxjbkpoZEMxQ2IyeGtMbmR2Wm1ZeVhDSXBJR1p2Y20xaGRDaGNJbmR2Wm1ZeVhDSXBPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOekF3TzF4dUlDQm1iMjUwTFhOMGVXeGxPaUJpYjJ4a08xeHVmVnh1YUhSdGJDQjdYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQXhMakUxTzF4dUlDQXRkMlZpYTJsMExYUmxlSFF0YzJsNlpTMWhaR3AxYzNRNklERXdNQ1U3WEc1OVhHNWNibUp2WkhrZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc1OVhHNWNibTFoYVc0Z2UxeHVJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNibjFjYmx4dWFERWdlMXh1SUNCbWIyNTBMWE5wZW1VNklESmxiVHRjYmlBZ2JXRnlaMmx1T2lBd0xqWTNaVzBnTUR0Y2JuMWNibHh1YUhJZ2UxeHVJQ0JpYjNndGMybDZhVzVuT2lCamIyNTBaVzUwTFdKdmVEdGNiaUFnYUdWcFoyaDBPaUF3TzF4dUlDQnZkbVZ5Wm14dmR6b2dkbWx6YVdKc1pUdGNibjFjYmx4dWNISmxJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRzF2Ym05emNHRmpaU3dnYlc5dWIzTndZV05sTzF4dUlDQm1iMjUwTFhOcGVtVTZJREZsYlR0Y2JuMWNibHh1WVNCN1hHNGdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJSFJ5WVc1emNHRnlaVzUwTzF4dWZWeHVYRzVoWW1KeVczUnBkR3hsWFNCN1hHNGdJR0p2Y21SbGNpMWliM1IwYjIwNklHNXZibVU3WEc0Z0lIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2RXNWtaWEpzYVc1bE8xeHVJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaU0JrYjNSMFpXUTdYRzU5WEc1Y2JtSXNYRzV6ZEhKdmJtY2dlMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dZbTlzWkdWeU8xeHVmVnh1WEc1amIyUmxMRnh1YTJKa0xGeHVjMkZ0Y0NCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCdGIyNXZjM0JoWTJVc0lHMXZibTl6Y0dGalpUdGNiaUFnWm05dWRDMXphWHBsT2lBeFpXMDdYRzU5WEc1Y2JuTnRZV3hzSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUE0TUNVN1hHNTlYRzVjYm5OMVlpeGNibk4xY0NCN1hHNGdJR1p2Ym5RdGMybDZaVG9nTnpVbE8xeHVJQ0JzYVc1bExXaGxhV2RvZERvZ01EdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNTlYRzVjYm5OMVlpQjdYRzRnSUdKdmRIUnZiVG9nTFRBdU1qVmxiVHRjYm4xY2JseHVjM1Z3SUh0Y2JpQWdkRzl3T2lBdE1DNDFaVzA3WEc1OVhHNWNibWx0WnlCN1hHNGdJR0p2Y21SbGNpMXpkSGxzWlRvZ2JtOXVaVHRjYm4xY2JseHVZblYwZEc5dUxGeHVhVzV3ZFhRc1hHNXZjSFJuY205MWNDeGNibk5sYkdWamRDeGNiblJsZUhSaGNtVmhJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJR2x1YUdWeWFYUTdYRzRnSUdadmJuUXRjMmw2WlRvZ01UQXdKVHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREV1TVRVN1hHNGdJRzFoY21kcGJqb2dNRHRjYm4xY2JseHVZblYwZEc5dUxGeHVhVzV3ZFhRZ2UxeHVJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjYm4xY2JseHVZblYwZEc5dUxGeHVjMlZzWldOMElIdGNiaUFnZEdWNGRDMTBjbUZ1YzJadmNtMDZJRzV2Ym1VN1hHNTlYRzVjYm1KMWRIUnZiaXhjYmx0MGVYQmxQV0oxZEhSdmJsMHNYRzViZEhsd1pUMXlaWE5sZEYwc1hHNWJkSGx3WlQxemRXSnRhWFJkSUh0Y2JpQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUJpZFhSMGIyNDdYRzU5WEc1Y2JtSjFkSFJ2YmpvNkxXMXZlaTFtYjJOMWN5MXBibTVsY2l4Y2JsdDBlWEJsUFdKMWRIUnZibDA2T2kxdGIzb3RabTlqZFhNdGFXNXVaWElzWEc1YmRIbHdaVDF5WlhObGRGMDZPaTF0YjNvdFptOWpkWE10YVc1dVpYSXNYRzViZEhsd1pUMXpkV0p0YVhSZE9qb3RiVzk2TFdadlkzVnpMV2x1Ym1WeUlIdGNiaUFnWW05eVpHVnlMWE4wZVd4bE9pQnViMjVsTzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1ZlZ4dVhHNWlkWFIwYjI0NkxXMXZlaTFtYjJOMWMzSnBibWNzWEc1YmRIbHdaVDFpZFhSMGIyNWRPaTF0YjNvdFptOWpkWE55YVc1bkxGeHVXM1I1Y0dVOWNtVnpaWFJkT2kxdGIzb3RabTlqZFhOeWFXNW5MRnh1VzNSNWNHVTljM1ZpYldsMFhUb3RiVzk2TFdadlkzVnpjbWx1WnlCN1hHNGdJRzkxZEd4cGJtVTZJREZ3ZUNCa2IzUjBaV1FnUW5WMGRHOXVWR1Y0ZER0Y2JuMWNibHh1Wm1sbGJHUnpaWFFnZTF4dUlDQndZV1JrYVc1bk9pQXdMak0xWlcwZ01DNDNOV1Z0SURBdU5qSTFaVzA3WEc1OVhHNWNibXhsWjJWdVpDQjdYRzRnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzRnSUdOdmJHOXlPaUJwYm1obGNtbDBPMXh1SUNCa2FYTndiR0Y1T2lCMFlXSnNaVHRjYmlBZ2JXRjRMWGRwWkhSb09pQXhNREFsTzF4dUlDQndZV1JrYVc1bk9pQXdPMXh1SUNCM2FHbDBaUzF6Y0dGalpUb2dibTl5YldGc08xeHVmVnh1WEc1d2NtOW5jbVZ6Y3lCN1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQmlZWE5sYkdsdVpUdGNibjFjYmx4dWRHVjRkR0Z5WldFZ2UxeHVJQ0J2ZG1WeVpteHZkem9nWVhWMGJ6dGNibjFjYmx4dVczUjVjR1U5WTJobFkydGliM2hkTEZ4dVczUjVjR1U5Y21Ga2FXOWRJSHRjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNibjFjYmx4dVczUjVjR1U5Ym5WdFltVnlYVG82TFhkbFltdHBkQzFwYm01bGNpMXpjR2x1TFdKMWRIUnZiaXhjYmx0MGVYQmxQVzUxYldKbGNsMDZPaTEzWldKcmFYUXRiM1YwWlhJdGMzQnBiaTFpZFhSMGIyNGdlMXh1SUNCb1pXbG5hSFE2SUdGMWRHODdYRzU5WEc1Y2JsdDBlWEJsUFhObFlYSmphRjBnZTF4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJSFJsZUhSbWFXVnNaRHRjYmlBZ2IzVjBiR2x1WlMxdlptWnpaWFE2SUMweWNIZzdYRzU5WEc1Y2JsdDBlWEJsUFhObFlYSmphRjA2T2kxM1pXSnJhWFF0YzJWaGNtTm9MV1JsWTI5eVlYUnBiMjRnZTF4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hHNTlYRzVjYmpvNkxYZGxZbXRwZEMxbWFXeGxMWFZ3Ykc5aFpDMWlkWFIwYjI0Z2UxeHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUdKMWRIUnZianRjYmlBZ1ptOXVkRG9nYVc1b1pYSnBkRHRjYm4xY2JseHVaR1YwWVdsc2N5QjdYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh1ZlZ4dVhHNXpkVzF0WVhKNUlIdGNiaUFnWkdsemNHeGhlVG9nYkdsemRDMXBkR1Z0TzF4dWZWeHVYRzUwWlcxd2JHRjBaU0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc1OVhHNWNibHRvYVdSa1pXNWRJSHRjYmlBZ1pHbHpjR3hoZVRvZ2JtOXVaVHRjYm4xY2JseHVhSFJ0YkNCN1hHNGdJR0p2ZUMxemFYcHBibWM2SUdKdmNtUmxjaTFpYjNnN1hHNGdJRzFoY21kcGJqb2dNRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNibjFjYmx4dUtpeGNiaW82T21KbFptOXlaU3hjYmlvNk9tRm1kR1Z5SUh0Y2JpQWdZbTk0TFhOcGVtbHVaem9nYVc1b1pYSnBkRHRjYm4xY2JseHVhVzFuSUh0Y2JpQWdiV0Y0TFhkcFpIUm9PaUF4TURBbE8xeHVJQ0JvWldsbmFIUTZJR0YxZEc4N1hHNGdJSFpsY25ScFkyRnNMV0ZzYVdkdU9pQjBiM0E3WEc1OVhHNWNiaTUyYVhOMVlXeHNlUzFvYVdSa1pXNDZibTkwS0RwbWIyTjFjeWs2Ym05MEtEcGhZM1JwZG1VcElIdGNiaUFnY0c5emFYUnBiMjQ2SUdGaWMyOXNkWFJsTzF4dUlDQjNhV1IwYURvZ01YQjRPMXh1SUNCb1pXbG5hSFE2SURGd2VEdGNiaUFnYldGeVoybHVPaUF0TVhCNE8xeHVJQ0JpYjNKa1pYSTZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUhkb2FYUmxMWE53WVdObE9pQnViM2R5WVhBN1hHNGdJR05zYVhBdGNHRjBhRG9nYVc1elpYUW9NVEF3SlNrN1hHNGdJR05zYVhBNklISmxZM1FvTUNBd0lEQWdNQ2s3WEc0Z0lHOTJaWEptYkc5M09pQm9hV1JrWlc0N1hHNTlYRzVjYm1KdlpIa2dlMXh1SUNCbWIyNTBMWE5wZW1VNklESXljSGc3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lrMXZiblJ6WlhKeVlYUmNJaXdnUVhKcFlXd3NJRWhsYkhabGRHbGpZU3dnYzJGdWN5MXpaWEpwWmp0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURNd2NIZzdYRzRnSUdOdmJHOXlPaUFqTTBJeVJUVTJPMXh1SUNCdmRtVnlabXh2ZHkxNE9pQm9hV1JrWlc0N1hHNTlYRzVjYmk1aWRYUjBiMjR0Y21WelpYUWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lCMGNtRnVjM0JoY21WdWREdGNiaUFnWW05eVpHVnlPaUJ1YjI1bE8xeHVJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibjFjYmx4dUxtTnZiblJoYVc1bGNpQjdYRzRnSUcxaGVDMTNhV1IwYURvZ01UVTFNSEI0TzF4dUlDQnRZWEpuYVc0NklEQWdZWFYwYnp0Y2JpQWdjR0ZrWkdsdVp6b2dNQ0F4TlhCNE8xeHVJQ0IzYVdSMGFEb2dZWFYwYnp0Y2JuMWNibHh1TG1SaWVDQXVZWEpqYUdsMlpTMWhjblJwWTJ4bElIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dWZWeHVMbVJpZUNBdVlYSmphR2wyWlMxaGNuUnBZMnhsWDE5cGJXRm5aUzFzYVc1cklIdGNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE5IQjRPMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYm4xY2JpNWtZbmdnTG1GeVkyaHBkbVV0WVhKMGFXTnNaVjlmYVcxaFoyVWdlMXh1SUNCb1pXbG5hSFE2SURJNU1IQjRPMXh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lCMWNtd29YQ0l1TGk4dUxpOXBiV2N2WVhKMGFXTnNaUzB4TG1wd1oxd2lLVHRjYmlBZ1ltRmphMmR5YjNWdVpDMXlaWEJsWVhRNklHNXZMWEpsY0dWaGREdGNiaUFnWW1GamEyZHliM1Z1WkMxd2IzTnBkR2x2YmpvZ1kyVnVkR1Z5TzF4dUlDQmlZV05yWjNKdmRXNWtMWE5wZW1VNklHTnZkbVZ5TzF4dWZWeHVMbVJpZUNBdVlYSmphR2wyWlMxaGNuUnBZMnhsWDE5a1lYUmxJSHRjYmlBZ1ptOXVkQzF6YVhwbE9pQmpZV3hqS0RFMmNIZ2dLeUEwSUNvZ0tDZ3hNREIyZHlBdElETXlNSEI0S1NBdklERXlNekFwS1R0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNiaUFnYldGeVoybHVMV0p2ZEhSdmJUb2dNVEJ3ZUR0Y2JuMWNia0J0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF4TlRVd2NIZ3BJSHRjYmlBZ0xtUmllQ0F1WVhKamFHbDJaUzFoY25ScFkyeGxYMTlrWVhSbElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESXdjSGc3WEc0Z0lIMWNibjFjYmk1a1luZ2dMbUZ5WTJocGRtVXRZWEowYVdOc1pWOWZkR2wwYkdVZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF4TzF4dWZWeHVMbVJpZUNBdVlYSmphR2wyWlMxaGNuUnBZMnhsWDE5MGFYUnNaUzFzYVc1cklIdGNiaUFnWm05dWRDMXphWHBsT2lCallXeGpLREU0Y0hnZ0t5QTNJQ29nS0NneE1EQjJkeUF0SURNeU1IQjRLU0F2SURFeU16QXBLVHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4dUlDQmpiMnh2Y2pvZ0l6TkNNa1UxTmp0Y2JuMWNia0J0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF4TlRVd2NIZ3BJSHRjYmlBZ0xtUmllQ0F1WVhKamFHbDJaUzFoY25ScFkyeGxYMTkwYVhSc1pTMXNhVzVySUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURJMWNIZzdYRzRnSUgxY2JuMWNiaTVrWW5nZ0xtRnlZMmhwZG1VdFlYSjBhV05zWlY5ZmRHbDBiR1V0YkdsdWF6cDJhWE5wZEdWa0lIdGNiaUFnWTI5c2IzSTZJR2x1YUdWeWFYUTdYRzU5WEc0dVpHSjRJQzVoY21Ob2FYWmxMV0Z5ZEdsamJHVmZYM1JwZEd4bExXeHBibXM2YUc5MlpYSWdlMXh1SUNCamIyeHZjam9nSXpkQk1UaEVOVHRjYm4xY2JpNWtZbmdnTG1GeVkyaHBkbVV0WVhKMGFXTnNaVjlmZEdGbmN5QjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc0Z0lHMWhjbWRwYmpvZ01EdGNiaUFnY0dGa1pHbHVaem9nTUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh1SUNCMGIzQTZJREl3Y0hnN1hHNGdJR3hsWm5RNklESXdjSGc3WEc1OVhHNHVaR0o0SUM1aGNtTm9hWFpsTFdGeWRHbGpiR1ZmWDNSaFp6cHViM1FvT21acGNuTjBMV05vYVd4a0tTQjdYRzRnSUcxaGNtZHBiaTFzWldaME9pQXhNSEI0TzF4dWZWeHVMbVJpZUNBdVlYSmphR2wyWlMxaGNuUnBZMnhsWDE5MFlXY2djM0JoYmlCN1hHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHVJQ0JqYjJ4dmNqb2dJemRCTVRoRU5UdGNiaUFnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSTJabVpqdGNiaUFnY0dGa1pHbHVaem9nTUM0eFpXMGdNQzQzWlcwN1hHNTlYRzR1WkdKNElDNWliRzluTFhkeVlYQWdlMXh1SUNCa2FYTndiR0Y1T2lCbmNtbGtPMXh1SUNCamIyeDFiVzR0WjJGd09pQXlNSEI0TzF4dUlDQnliM2N0WjJGd09pQTJNSEI0TzF4dUlDQm5jbWxrTFhSbGJYQnNZWFJsTFdOdmJIVnRibk02SUhKbGNHVmhkQ2d6TENCdGFXNXRZWGdvTXpFMWNIZ3NJREZtY2lrcE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQTJNSEI0TzF4dWZWeHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJREV3TWpSd2VDa2dlMXh1SUNBdVpHSjRJQzVpYkc5bkxYZHlZWEFnZTF4dUlDQWdJR2R5YVdRdGRHVnRjR3hoZEdVdFkyOXNkVzF1Y3pvZ2NtVndaV0YwS0dGMWRHOHRabWwwTENCdGFXNXRZWGdvTXpFMWNIZ3NJREZtY2lrcE8xeHVJQ0I5WEc1OVhHNHVaR0o0SUM1aWRHNHRZV05qWlc1MElIdGNiaUFnWm05dWRDMXphWHBsT2lBeU1IQjRPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOakF3TzF4dUlDQmpiMnh2Y2pvZ0l6ZEJNVGhFTlR0Y2JpQWdjR0ZrWkdsdVp6b2dNQzQ1WlcwZ01pNHlaVzA3WEc0Z0lHSnZjbVJsY2pvZ01uQjRJSE52Ykdsa0lDTTNRVEU0UkRVN1hHNGdJSFJ5WVc1emFYUnBiMjQ2SUdGc2JDQXdMakp6SUdWaGMyVXRhVzQ3WEc1OVhHNHVaR0o0SUM1aWRHNHRZV05qWlc1ME9taHZkbVZ5SUh0Y2JpQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dJemRCTVRoRU5UdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNTlYRzR1WkdKNElDNWlkRzR0WVdOalpXNTBPbUZqZEdsMlpTQjdYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNNelFqSkZOVFk3WEc0Z0lHSnZjbVJsY2kxamIyeHZjam9nSXpOQ01rVTFOanRjYm4xY2JpNWtZbmdnTG0xbGRHRXRkR0ZuY3kxdVlYWWdlMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUExTUhCNE8xeHVmVnh1TG1SaWVDQXViV1YwWVMxMFlXZHpMVzVoZGw5ZmJHbHpkQ0I3WEc0Z0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hHNGdJRzFoY21kcGJqb2dNRHRjYmlBZ2NHRmtaR2x1WnpvZ01EdGNiaUFnWkdsemNHeGhlVG9nWm14bGVEdGNiaUFnWm14bGVDMTNjbUZ3T2lCM2NtRndPMXh1ZlZ4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEYzJPSEI0S1NCN1hHNGdJQzVrWW5nZ0xtMWxkR0V0ZEdGbmN5MXVZWFpmWDJ4cGMzUWdlMXh1SUNBZ0lHOTJaWEptYkc5M0xYZzZJR0YxZEc4N1hHNGdJQ0FnWm14bGVDMTNjbUZ3T2lCdWIzZHlZWEE3WEc0Z0lIMWNibjFjYmk1a1luZ2dMbTFsZEdFdGRHRm5jeTF1WVhaZlgybDBaVzA2Ym05MEtEcG1hWEp6ZEMxamFHbHNaQ2tnZTF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTVRWd2VEdGNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM05qaHdlQ2tnZTF4dUlDQXVaR0o0SUM1dFpYUmhMWFJoWjNNdGJtRjJYMTlwZEdWdE9tNXZkQ2c2Wm1seWMzUXRZMmhwYkdRcElIdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNVEJ3ZUR0Y2JpQWdmVnh1ZlZ4dUxtUmllQ0F1YldWMFlTMTBZV2R6TFc1aGRsOWZhWFJsYlNCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklERTFjSGc3WEc1OVhHNHVaR0o0SUM1dFpYUmhMWFJoWjNNdGJtRjJYMTlzYVc1cklIdGNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHVJQ0JtYjI1MExYTnBlbVU2SUdOaGJHTW9NVGh3ZUNBcklETWdLaUFvS0RFd01IWjNJQzBnTXpJd2NIZ3BJQzhnTVRJek1Da3BPMXh1SUNCd1lXUmthVzVuT2lBd0xqTmxiU0F3TGpobGJUdGNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVJQ0JqYjJ4dmNqb2dJek5DTWtVMU5qdGNiaUFnWW05eVpHVnlPaUF4Y0hnZ2MyOXNhV1FnSXpkQk1UaEVOVHRjYmlBZ2QyaHBkR1V0YzNCaFkyVTZJRzV2ZDNKaGNEdGNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJREF1TW5NZ1pXRnpaUzFwYmp0Y2JuMWNia0J0WldScFlTQW9iV2x1TFhkcFpIUm9PaUF4TlRVd2NIZ3BJSHRjYmlBZ0xtUmllQ0F1YldWMFlTMTBZV2R6TFc1aGRsOWZiR2x1YXlCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBeU1YQjRPMXh1SUNCOVhHNTlYRzR1WkdKNElDNXRaWFJoTFhSaFozTXRibUYyWDE5c2FXNXJMUzFoWTNScGRtVWdlMXh1SUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBak4wRXhPRVExTzF4dUlDQmpiMnh2Y2pvZ0kyWm1aanRjYm4xY2JpNWtZbmdnTG0xbGRHRXRkR0ZuY3kxdVlYWmZYMnhwYm1zNmFHOTJaWElnZTF4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWpSamhHTVVaR08xeHVJQ0JqYjJ4dmNqb2dJek5DTWtVMU5qdGNibjFjYmk1a1luZ2dMbkJoWjJVdGRHbDBiR1VnZTF4dUlDQm1iMjUwTFhOcGVtVTZJR05oYkdNb016QndlQ0FySURJd0lDb2dLQ2d4TURCMmR5QXRJRE15TUhCNEtTQXZJREV5TXpBcEtUdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERXVNenRjYmlBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnYldGeVoybHVPaUF3TzF4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBME1IQjRPMXh1ZlZ4dVFHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERTFOVEJ3ZUNrZ2UxeHVJQ0F1WkdKNElDNXdZV2RsTFhScGRHeGxJSHRjYmlBZ0lDQm1iMjUwTFhOcGVtVTZJRFV3Y0hnN1hHNGdJSDFjYm4xY2JpNWtZbmdnTG5Ob2IzY3RiVzl5WlMxaWRHNGdlMXh1SUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEc0Z0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFMk1IQjRPMXh1ZlZ4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNHVaR0o0SUM1aGNtTm9hWFpsTFdGeWRHbGpiR1ZmWDJsdFlXZGxlMkpoWTJ0bmNtOTFibVF0YVcxaFoyVTZkWEpzS0Z3aUxpNHZMaTR2YVcxbkwyRnlkR2xqYkdVdE1TNTNaV0p3WENJcGZWeHVmVnh1WEc0Z1FHMWxaR2xoSUNodGFXNHRkMmxrZEdnNklERTFOVEJ3ZUNsN1hHNWNia0J6ZFhCd2IzSjBjeUFvTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT201dmJtVXBlMXh1WEc1OVhHNWNibjFjYmx4dUlFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNREkwY0hncGUxeHVYRzVBYzNWd2NHOXlkSE1nS0MxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRwdWIyNWxLWHRjYmx4dWZWeHVYRzU5WEc1Y2JpQkFiV1ZrYVdFZ0tHMWhlQzEzYVdSMGFEb2dOelk0Y0hncGUxeHVYRzVBYzNWd2NHOXlkSE1nS0MxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRwdWIyNWxLWHRjYmx4dWZWeHVYRzU5WEc0aUxDSm9kRzFzSUh0Y2NseHVJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXhMakUxTzF4eVhHNGdJQ0FnTFhkbFltdHBkQzEwWlhoMExYTnBlbVV0WVdScWRYTjBPaUF4TURBbE8xeHlYRzU5WEhKY2JseHlYRzVpYjJSNUlIdGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1YldGcGJpQjdYSEpjYmlBZ0lDQmthWE53YkdGNU9pQmliRzlqYXp0Y2NseHVmVnh5WEc1Y2NseHVhREVnZTF4eVhHNGdJQ0FnWm05dWRDMXphWHBsT2lBeVpXMDdYSEpjYmlBZ0lDQnRZWEpuYVc0NklEQXVOamRsYlNBd08xeHlYRzU5WEhKY2JseHlYRzVvY2lCN1hISmNiaUFnSUNCaWIzZ3RjMmw2YVc1bk9pQmpiMjUwWlc1MExXSnZlRHRjY2x4dUlDQWdJR2hsYVdkb2REb2dNRHRjY2x4dUlDQWdJRzkyWlhKbWJHOTNPaUIyYVhOcFlteGxPMXh5WEc1OVhISmNibHh5WEc1d2NtVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUcxdmJtOXpjR0ZqWlN3Z2JXOXViM053WVdObE8xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhaVzA3WEhKY2JuMWNjbHh1WEhKY2JtRWdlMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dkSEpoYm5Od1lYSmxiblE3WEhKY2JuMWNjbHh1WEhKY2JtRmlZbkpiZEdsMGJHVmRJSHRjY2x4dUlDQWdJR0p2Y21SbGNpMWliM1IwYjIwNklHNXZibVU3WEhKY2JpQWdJQ0IwWlhoMExXUmxZMjl5WVhScGIyNDZJSFZ1WkdWeWJHbHVaVHRjY2x4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dkVzVrWlhKc2FXNWxJR1J2ZEhSbFpEdGNjbHh1ZlZ4eVhHNWNjbHh1WWl4Y2NseHVjM1J5YjI1bklIdGNjbHh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUJpYjJ4a1pYSTdYSEpjYm4xY2NseHVYSEpjYm1OdlpHVXNYSEpjYm10aVpDeGNjbHh1YzJGdGNDQjdYSEpjYmlBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nYlc5dWIzTndZV05sTENCdGIyNXZjM0JoWTJVN1hISmNiaUFnSUNCbWIyNTBMWE5wZW1VNklERmxiVHRjY2x4dWZWeHlYRzVjY2x4dWMyMWhiR3dnZTF4eVhHNGdJQ0FnWm05dWRDMXphWHBsT2lBNE1DVTdYSEpjYm4xY2NseHVYSEpjYm5OMVlpeGNjbHh1YzNWd0lIdGNjbHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dOelVsTzF4eVhHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklEQTdYSEpjYmlBZ0lDQndiM05wZEdsdmJqb2djbVZzWVhScGRtVTdYSEpjYmlBZ0lDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hISmNibjFjY2x4dVhISmNibk4xWWlCN1hISmNiaUFnSUNCaWIzUjBiMjA2SUMwd0xqSTFaVzA3WEhKY2JuMWNjbHh1WEhKY2JuTjFjQ0I3WEhKY2JpQWdJQ0IwYjNBNklDMHdMalZsYlR0Y2NseHVmVnh5WEc1Y2NseHVhVzFuSUh0Y2NseHVJQ0FnSUdKdmNtUmxjaTF6ZEhsc1pUb2dibTl1WlR0Y2NseHVmVnh5WEc1Y2NseHVZblYwZEc5dUxGeHlYRzVwYm5CMWRDeGNjbHh1YjNCMFozSnZkWEFzWEhKY2JuTmxiR1ZqZEN4Y2NseHVkR1Y0ZEdGeVpXRWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUdsdWFHVnlhWFE3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFd01DVTdYSEpjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVM0eE5UdGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNjbHh1ZlZ4eVhHNWNjbHh1WW5WMGRHOXVMRnh5WEc1cGJuQjFkQ0I3WEhKY2JpQWdJQ0J2ZG1WeVpteHZkem9nZG1semFXSnNaVHRjY2x4dWZWeHlYRzVjY2x4dVluVjBkRzl1TEZ4eVhHNXpaV3hsWTNRZ2UxeHlYRzRnSUNBZ2RHVjRkQzEwY21GdWMyWnZjbTA2SUc1dmJtVTdYSEpjYm4xY2NseHVYSEpjYm1KMWRIUnZiaXhjY2x4dVczUjVjR1U5WENKaWRYUjBiMjVjSWwwc1hISmNibHQwZVhCbFBWd2ljbVZ6WlhSY0lsMHNYSEpjYmx0MGVYQmxQVndpYzNWaWJXbDBYQ0pkSUh0Y2NseHVJQ0FnSUMxM1pXSnJhWFF0WVhCd1pXRnlZVzVqWlRvZ1luVjBkRzl1TzF4eVhHNTlYSEpjYmx4eVhHNWlkWFIwYjI0Nk9pMXRiM290Wm05amRYTXRhVzV1WlhJc1hISmNibHQwZVhCbFBWd2lZblYwZEc5dVhDSmRPam90Ylc5NkxXWnZZM1Z6TFdsdWJtVnlMRnh5WEc1YmRIbHdaVDFjSW5KbGMyVjBYQ0pkT2pvdGJXOTZMV1p2WTNWekxXbHVibVZ5TEZ4eVhHNWJkSGx3WlQxY0luTjFZbTFwZEZ3aVhUbzZMVzF2ZWkxbWIyTjFjeTFwYm01bGNpQjdYSEpjYmlBZ0lDQmliM0prWlhJdGMzUjViR1U2SUc1dmJtVTdYSEpjYmlBZ0lDQndZV1JrYVc1bk9pQXdPMXh5WEc1OVhISmNibHh5WEc1aWRYUjBiMjQ2TFcxdmVpMW1iMk4xYzNKcGJtY3NYSEpjYmx0MGVYQmxQVndpWW5WMGRHOXVYQ0pkT2kxdGIzb3RabTlqZFhOeWFXNW5MRnh5WEc1YmRIbHdaVDFjSW5KbGMyVjBYQ0pkT2kxdGIzb3RabTlqZFhOeWFXNW5MRnh5WEc1YmRIbHdaVDFjSW5OMVltMXBkRndpWFRvdGJXOTZMV1p2WTNWemNtbHVaeUI3WEhKY2JpQWdJQ0J2ZFhSc2FXNWxPaUF4Y0hnZ1pHOTBkR1ZrSUVKMWRIUnZibFJsZUhRN1hISmNibjFjY2x4dVhISmNibVpwWld4a2MyVjBJSHRjY2x4dUlDQWdJSEJoWkdScGJtYzZJREF1TXpWbGJTQXdMamMxWlcwZ01DNDJNalZsYlR0Y2NseHVmVnh5WEc1Y2NseHViR1ZuWlc1a0lIdGNjbHh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2c3WEhKY2JpQWdJQ0JqYjJ4dmNqb2dhVzVvWlhKcGREdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklIUmhZbXhsTzF4eVhHNGdJQ0FnYldGNExYZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dNRHRjY2x4dUlDQWdJSGRvYVhSbExYTndZV05sT2lCdWIzSnRZV3c3WEhKY2JuMWNjbHh1WEhKY2JuQnliMmR5WlhOeklIdGNjbHh1SUNBZ0lIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2NseHVmVnh5WEc1Y2NseHVkR1Y0ZEdGeVpXRWdlMXh5WEc0Z0lDQWdiM1psY21ac2IzYzZJR0YxZEc4N1hISmNibjFjY2x4dVhISmNibHQwZVhCbFBWd2lZMmhsWTJ0aWIzaGNJbDBzWEhKY2JsdDBlWEJsUFZ3aWNtRmthVzljSWwwZ2UxeHlYRzRnSUNBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRHRjY2x4dUlDQWdJSEJoWkdScGJtYzZJREE3WEhKY2JuMWNjbHh1WEhKY2JsdDBlWEJsUFZ3aWJuVnRZbVZ5WENKZE9qb3RkMlZpYTJsMExXbHVibVZ5TFhOd2FXNHRZblYwZEc5dUxGeHlYRzViZEhsd1pUMWNJbTUxYldKbGNsd2lYVG82TFhkbFltdHBkQzF2ZFhSbGNpMXpjR2x1TFdKMWRIUnZiaUI3WEhKY2JpQWdJQ0JvWldsbmFIUTZJR0YxZEc4N1hISmNibjFjY2x4dVhISmNibHQwZVhCbFBWd2ljMlZoY21Ob1hDSmRJSHRjY2x4dUlDQWdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nZEdWNGRHWnBaV3hrTzF4eVhHNGdJQ0FnYjNWMGJHbHVaUzF2Wm1aelpYUTZJQzB5Y0hnN1hISmNibjFjY2x4dVhISmNibHQwZVhCbFBWd2ljMlZoY21Ob1hDSmRPam90ZDJWaWEybDBMWE5sWVhKamFDMWtaV052Y21GMGFXOXVJSHRjY2x4dUlDQWdJQzEzWldKcmFYUXRZWEJ3WldGeVlXNWpaVG9nYm05dVpUdGNjbHh1ZlZ4eVhHNWNjbHh1SURvNkxYZGxZbXRwZEMxbWFXeGxMWFZ3Ykc5aFpDMWlkWFIwYjI0Z2UxeHlYRzRnSUNBZ0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9pQmlkWFIwYjI0N1hISmNiaUFnSUNCbWIyNTBPaUJwYm1obGNtbDBPMXh5WEc1OVhISmNibHh5WEc1a1pYUmhhV3h6SUh0Y2NseHVJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc1OVhISmNibHh5WEc1emRXMXRZWEo1SUh0Y2NseHVJQ0FnSUdScGMzQnNZWGs2SUd4cGMzUXRhWFJsYlR0Y2NseHVmVnh5WEc1Y2NseHVkR1Z0Y0d4aGRHVWdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVmVnh5WEc1Y2NseHVXMmhwWkdSbGJsMGdlMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVmU0lzSW1oMGJXd2dlMXh5WEc0Z0lDQWdZbTk0TFhOcGVtbHVaem9nWW05eVpHVnlMV0p2ZUR0Y2NseHVJQ0FnSUcxaGNtZHBiam9nTUR0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SURBN1hISmNibjFjY2x4dVhISmNiaW9zWEhKY2JpbzZPbUpsWm05eVpTeGNjbHh1S2pvNllXWjBaWElnZTF4eVhHNGdJQ0FnWW05NExYTnBlbWx1WnpvZ2FXNW9aWEpwZER0Y2NseHVmVnh5WEc1Y2NseHVhVzFuSUh0Y2NseHVJQ0FnSUcxaGVDMTNhV1IwYURvZ01UQXdKVHRjY2x4dUlDQWdJR2hsYVdkb2REb2dZWFYwYnp0Y2NseHVJQ0FnSUhabGNuUnBZMkZzTFdGc2FXZHVPaUIwYjNBN1hISmNibjFjY2x4dVhISmNiaTUyYVhOMVlXeHNlUzFvYVdSa1pXNDZibTkwS0RwbWIyTjFjeWs2Ym05MEtEcGhZM1JwZG1VcElIdGNjbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeGNIZzdYSEpjYmlBZ0lDQm9aV2xuYUhRNklERndlRHRjY2x4dUlDQWdJRzFoY21kcGJqb2dMVEZ3ZUR0Y2NseHVJQ0FnSUdKdmNtUmxjam9nTUR0Y2NseHVJQ0FnSUhCaFpHUnBibWM2SURBN1hISmNiaUFnSUNCM2FHbDBaUzF6Y0dGalpUb2dibTkzY21Gd08xeHlYRzRnSUNBZ1kyeHBjQzF3WVhSb09pQnBibk5sZENneE1EQWxLVHRjY2x4dUlDQWdJR05zYVhBNklISmxZM1FvTUNBd0lEQWdNQ2s3WEhKY2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh5WEc1OVhISmNibHh5WEc1aWIyUjVJSHRjY2x4dUlDQWdJR1p2Ym5RdGMybDZaVG9nTWpKd2VEdGNjbHh1SUNBZ0lHWnZiblF0ZDJWcFoyaDBPaUExTURBN1hISmNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOYjI1MGMyVnljbUYwWENJc0lFRnlhV0ZzTENCSVpXeDJaWFJwWTJFc0lITmhibk10YzJWeWFXWTdYSEpjYmlBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTXpCd2VEdGNjbHh1SUNBZ0lHTnZiRzl5T2lBa1lXTmpaVzUwTFdSaGNtczdYSEpjYmlBZ0lDQnZkbVZ5Wm14dmR5MTRPaUJvYVdSa1pXNWNjbHh1ZlZ4eVhHNWNjbHh1TG1KMWRIUnZiaTF5WlhObGRDQjdYSEpjYmlBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjY2x4dUlDQWdJR0p2Y21SbGNqb2dibTl1WlR0Y2NseHVJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2NseHVmVnh5WEc1Y2NseHVMbU52Ym5SaGFXNWxjaUI3WEhKY2JpQWdJQ0J0WVhndGQybGtkR2c2SURFMU5UQndlRHRjY2x4dUlDQWdJRzFoY21kcGJqb2dNQ0JoZFhSdk8xeHlYRzRnSUNBZ2NHRmtaR2x1WnpvZ01DQXhOWEI0TzF4eVhHNGdJQ0FnZDJsa2RHZzZJR0YxZEc4N1hISmNibjBpTENJa1lXTmpaVzUwT2lBak4wRXhPRVExTzF4eVhHNGtZV05qWlc1MExXUmhjbXM2SUNNelFqSkZOVFk3WEhKY2JpUmhZMk5sYm5RdGJHbG5hSFE2SUNOR09FWXhSa1k3WEhKY2JpUnlaV1E2SUNORk9EUXhOREk3WEhKY2JpUm5jbVY1T2lBalJEQkVNa1F6TzF4eVhHNGtlV1ZzYkc5M09pQWpSa1pCUkRJNE8xeHlYRzRrWW14aFkyczZJQ015TmpJMk1qWTdYSEpjYmlSd2FXNXJPaUFqUlRBMlFVVTVPeUlzSWk1aGNtTm9hWFpsTFdGeWRHbGpiR1VnZTF4eVhHNGdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNGdJQ0FnSmw5ZmFXMWhaMlV0YkdsdWF5QjdYSEpjYmlBZ0lDQWdJQ0FnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNGdJQ0FnSUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURFMGNIZzdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1YMTlwYldGblpTQjdYSEpjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF5T1RCd2VEdGNjbHh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUIxY213b1hDSXVMaTh1TGk5cGJXY3ZZWEowYVdOc1pTMHhMbXB3WjF3aUtUdGNjbHh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFhKbGNHVmhkRG9nYm04dGNtVndaV0YwTzF4eVhHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFhOcGVtVTZJR052ZG1WeU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0psOWZaR0YwWlNCN1hISmNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZV1JoY0hScGRpMW1iMjUwS0RJd0xDQXhOaWs3WEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TUR0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lDQWdKbDlmZEdsMGJHVWdlMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiam9nTUR0Y2NseHVJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTVR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgzUnBkR3hsTFd4cGJtc2dlMXh5WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFl0Wm05dWRDZ3lOU3dnTVRncE8xeHlYRzRnSUNBZ0lDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlR0Y2NseHVJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTmpBd08xeHlYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQWtZV05qWlc1MExXUmhjbXM3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0FtWDE5MGFYUnNaUzFzYVc1ck9uWnBjMmwwWldRZ2UxeHlYRzRnSUNBZ0lDQWdJR052Ykc5eU9pQnBibWhsY21sME8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0psOWZkR2wwYkdVdGJHbHVhenBvYjNabGNpQjdYSEpjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1JoWTJObGJuUTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1YMTkwWVdkeklIdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JzYVhOMExYSmxjMlYwTzF4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3WEhKY2JpQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01qQndlRHRjY2x4dUlDQWdJQ0FnSUNCc1pXWjBPaUF5TUhCNE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUNBZ0psOWZkR0ZuT201dmRDZzZabWx5YzNRdFkyaHBiR1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTVRCd2VEdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWmZYM1JoWnlCemNHRnVJSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnWEhKY2JpQWdJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4eVhHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa1lXTmpaVzUwTzF4eVhHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNklDTm1abVk3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSEJoWkdScGJtYzZJQzR4WlcwZ0xqZGxiVHRjY2x4dUlDQWdJSDFjY2x4dWZTSXNJaTVpYkc5bkxYZHlZWEFnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWjNKcFpEdGNjbHh1SUNBZ0lHTnZiSFZ0YmkxbllYQTZJREl3Y0hnN1hISmNiaUFnSUNCeWIzY3RaMkZ3T2lBMk1IQjRPMXh5WEc0Z0lDQWdaM0pwWkMxMFpXMXdiR0YwWlMxamIyeDFiVzV6T2lCeVpYQmxZWFFvTXl3Z2JXbHViV0Y0S0RNeE5YQjRMQ0F4Wm5JcEtUdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHUjBJSHRjY2x4dUlDQWdJQ0FnSUNCbmNtbGtMWFJsYlhCc1lYUmxMV052YkhWdGJuTTZJSEpsY0dWaGRDaGhkWFJ2TFdacGRDd2diV2x1YldGNEtETXhOWEI0TENBeFpuSXBLVHRjY2x4dVhISmNiaUFnSUNCOVhISmNiaUFnSUNCdFlYSm5hVzR0WW05MGRHOXRPaUEyTUhCNE8xeHlYRzU5SWl3aUxtSjBiaTFoWTJObGJuUWdlMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF5TUhCNE8xeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFl3TUR0Y2NseHVJQ0FnSUdOdmJHOXlPaUFrWVdOalpXNTBPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dMamxsYlNBeUxqSmxiVHRjY2x4dUlDQWdJR0p2Y21SbGNqb2dNbkI0SUhOdmJHbGtJQ1JoWTJObGJuUTdYSEpjYmlBZ0lDQjBjbUZ1YzJsMGFXOXVPaUJoYkd3Z0xqSnpJR1ZoYzJVdGFXNDdYSEpjYmx4eVhHNGdJQ0FnSmpwb2IzWmxjaUI3WEhKY2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHRmpZMlZ1ZER0Y2NseHVJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0kyWm1aanRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbU9tRmpkR2wyWlNCN1hISmNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dKR0ZqWTJWdWRDMWtZWEpyTzF4eVhHNGdJQ0FnSUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nSkdGalkyVnVkQzFrWVhKck8xeHlYRzRnSUNBZ2ZWeHlYRzU5SWl3aUxtMWxkR0V0ZEdGbmN5MXVZWFlnZTF4eVhHNGdJQ0FnYldGeVoybHVMV0p2ZEhSdmJUb2dOVEJ3ZUR0Y2NseHVJQ0FnSUNaZlgyeHBjM1FnZTF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElHeHBjM1F0Y21WelpYUTdYSEpjYmlBZ0lDQWdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lDQWdJQ0JtYkdWNExYZHlZWEE2SUhkeVlYQTdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnYldRZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRtVnlabXh2ZHkxNE9pQmhkWFJ2TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYkdWNExYZHlZWEE2SUc1dmQzSmhjRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNiaUFnSUNBbVgxOXBkR1Z0T201dmRDZzZabWx5YzNRdFkyaHBiR1FwSUh0Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTVRWd2VEdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0J0WkNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTFzWldaME9pQXhNSEI0TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lDWmZYMmwwWlcwZ2UxeHlYRzRnSUNBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklERTFjSGc3WEhKY2JpQWdJQ0I5WEhKY2JpQWdJQ0FtWDE5c2FXNXJJSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCcGJteHBibVV0WW14dlkyczdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnWVdSaGNIUnBkaTFtYjI1MEtESXhMQ0F4T0NrN1hISmNiaUFnSUNBZ0lDQWdjR0ZrWkdsdVp6b2dNQzR6WlcwZ01DNDRaVzA3WEhKY2JpQWdJQ0FnSUNBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCdWIyNWxPMXh5WEc0Z0lDQWdJQ0FnSUdOdmJHOXlPaUFrWVdOalpXNTBMV1JoY21zN1hISmNiaUFnSUNBZ0lDQWdZbTl5WkdWeU9pQXhjSGdnYzI5c2FXUWdKR0ZqWTJWdWREdGNjbHh1SUNBZ0lDQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3TzF4eVhHNGdJQ0FnSUNBZ0lIUnlZVzV6YVhScGIyNDZJR0ZzYkNBdU1uTWdaV0Z6WlMxcGJqdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0ppMHRZV04wYVhabElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHRmpZMlZ1ZER0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5c2IzSTZJQ05tWm1ZN1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNZNmFHOTJaWElnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWVdOalpXNTBMV3hwWjJoME8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdGalkyVnVkQzFrWVhKck8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dWZTSXNJaTV3WVdkbExYUnBkR3hsSUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUdGa1lYQjBhWFl0Wm05dWRDZzFNQ3dnTXpBcE8xeHlYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TXp0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTJNREE3WEhKY2JpQWdJQ0IwWlhoMExYUnlZVzV6Wm05eWJUb2dkWEJ3WlhKallYTmxPMXh5WEc0Z0lDQWdiV0Z5WjJsdU9pQXdPMXh5WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ05EQndlRHRjY2x4dWZTSXNJaTV6YUc5M0xXMXZjbVV0WW5SdUlIdGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBeE5qQndlRHRjY2x4dWZTSmRmUT09ICovIiwiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1SZWd1bGFyLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LVJlZ3VsYXIud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCI7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi9mb250L01vbnRzZXJyYXQtTWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LU1lZGl1bS53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1TZW1pQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1TZW1pQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIjtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnQvTW9udHNlcnJhdC1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udC9Nb250c2VycmF0LUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc3R5bGU6IGJvbGQ7XG59XG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbn1cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICBoZWlnaHQ6IDA7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbn1cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICBmb250LXNpemU6IDFlbTtcbn1cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgbWFyZ2luOiAwO1xufVxuXG5idXR0b24sXG5pbnB1dCB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG5idXR0b24sXG5zZWxlY3Qge1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuYnV0dG9uLFxuW3R5cGU9YnV0dG9uXSxcblt0eXBlPXJlc2V0XSxcblt0eXBlPXN1Ym1pdF0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbn1cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPXJlc2V0XTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPXN1Ym1pdF06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPWJ1dHRvbl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1yZXNldF06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1zdWJtaXRdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG5bdHlwZT1jaGVja2JveF0sXG5bdHlwZT1yYWRpb10ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwO1xufVxuXG5bdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuW3R5cGU9c2VhcmNoXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbn1cblxuW3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICBmb250OiBpbmhlcml0O1xufVxuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5odG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuLnZpc3VhbGx5LWhpZGRlbjpub3QoOmZvY3VzKTpub3QoOmFjdGl2ZSkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxcHg7XG4gIGhlaWdodDogMXB4O1xuICBtYXJnaW46IC0xcHg7XG4gIGJvcmRlcjogMDtcbiAgcGFkZGluZzogMDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgY2xpcC1wYXRoOiBpbnNldCgxMDAlKTtcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMzBweDtcbiAgY29sb3I6ICMzQjJFNTY7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbn1cblxuLmJ1dHRvbi1yZXNldCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiAxNTUwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAwIDE1cHg7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZGJ4IC5hcmNoaXZlLWFydGljbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uZGJ4IC5hcmNoaXZlLWFydGljbGVfX2ltYWdlLWxpbmsge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX19pbWFnZSB7XG4gIGhlaWdodDogMjkwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2ltZy9hcnRpY2xlLTEuanBnXCIpO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG59XG4uZGJ4IC5hcmNoaXZlLWFydGljbGVfX2RhdGUge1xuICBmb250LXNpemU6IGNhbGMoMTZweCArIDQgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTIzMCkpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDE1NTBweCkge1xuICAuZGJ4IC5hcmNoaXZlLWFydGljbGVfX2RhdGUge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgfVxufVxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190aXRsZSB7XG4gIG1hcmdpbjogMDtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG4uZGJ4IC5hcmNoaXZlLWFydGljbGVfX3RpdGxlLWxpbmsge1xuICBmb250LXNpemU6IGNhbGMoMThweCArIDcgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTIzMCkpO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjM0IyRTU2O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDE1NTBweCkge1xuICAuZGJ4IC5hcmNoaXZlLWFydGljbGVfX3RpdGxlLWxpbmsge1xuICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgfVxufVxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190aXRsZS1saW5rOnZpc2l0ZWQge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cbi5kYnggLmFyY2hpdmUtYXJ0aWNsZV9fdGl0bGUtbGluazpob3ZlciB7XG4gIGNvbG9yOiAjN0ExOEQ1O1xufVxuLmRieCAuYXJjaGl2ZS1hcnRpY2xlX190YWdzIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMjBweDtcbiAgbGVmdDogMjBweDtcbn1cbi5kYnggLmFyY2hpdmUtYXJ0aWNsZV9fdGFnOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG4uZGJ4IC5hcmNoaXZlLWFydGljbGVfX3RhZyBzcGFuIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiAjN0ExOEQ1O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAwLjFlbSAwLjdlbTtcbn1cbi5kYnggLmJsb2ctd3JhcCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGNvbHVtbi1nYXA6IDIwcHg7XG4gIHJvdy1nYXA6IDYwcHg7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIG1pbm1heCgzMTVweCwgMWZyKSk7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5kYnggLmJsb2ctd3JhcCB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzMTVweCwgMWZyKSk7XG4gIH1cbn1cbi5kYnggLmJ0bi1hY2NlbnQge1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjN0ExOEQ1O1xuICBwYWRkaW5nOiAwLjllbSAyLjJlbTtcbiAgYm9yZGVyOiAycHggc29saWQgIzdBMThENTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZS1pbjtcbn1cbi5kYnggLmJ0bi1hY2NlbnQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN0ExOEQ1O1xuICBjb2xvcjogI2ZmZjtcbn1cbi5kYnggLmJ0bi1hY2NlbnQ6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNCMkU1NjtcbiAgYm9yZGVyLWNvbG9yOiAjM0IyRTU2O1xufVxuLmRieCAubWV0YS10YWdzLW5hdiB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG4uZGJ4IC5tZXRhLXRhZ3MtbmF2X19saXN0IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmRieCAubWV0YS10YWdzLW5hdl9fbGlzdCB7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcbiAgfVxufVxuLmRieCAubWV0YS10YWdzLW5hdl9faXRlbTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gIC5kYnggLm1ldGEtdGFncy1uYXZfX2l0ZW06bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG59XG4uZGJ4IC5tZXRhLXRhZ3MtbmF2X19pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbi5kYnggLm1ldGEtdGFncy1uYXZfX2xpbmsge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogY2FsYygxOHB4ICsgMyAqICgoMTAwdncgLSAzMjBweCkgLyAxMjMwKSk7XG4gIHBhZGRpbmc6IDAuM2VtIDAuOGVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjM0IyRTU2O1xuICBib3JkZXI6IDFweCBzb2xpZCAjN0ExOEQ1O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlLWluO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDE1NTBweCkge1xuICAuZGJ4IC5tZXRhLXRhZ3MtbmF2X19saW5rIHtcbiAgICBmb250LXNpemU6IDIxcHg7XG4gIH1cbn1cbi5kYnggLm1ldGEtdGFncy1uYXZfX2xpbmstLWFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3QTE4RDU7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmRieCAubWV0YS10YWdzLW5hdl9fbGluazpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGOEYxRkY7XG4gIGNvbG9yOiAjM0IyRTU2O1xufVxuLmRieCAucGFnZS10aXRsZSB7XG4gIGZvbnQtc2l6ZTogY2FsYygzMHB4ICsgMjAgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gMTIzMCkpO1xuICBsaW5lLWhlaWdodDogMS4zO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTU1MHB4KSB7XG4gIC5kYnggLnBhZ2UtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgfVxufVxuLmRieCAuc2hvdy1tb3JlLWJ0biB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMTYwcHg7XG59XG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcbi5kYnggLmFyY2hpdmUtYXJ0aWNsZV9faW1hZ2V7YmFja2dyb3VuZC1pbWFnZTp1cmwoXCIuLi8uLi9pbWcvYXJ0aWNsZS0xLndlYnBcIil9XG59XG5cbiBAbWVkaWEgKG1pbi13aWR0aDogMTU1MHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuXG59XG5cbn1cbiIsImh0bWwge1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMTU7XHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5tYWluIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5oMSB7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbmhyIHtcclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbnByZSB7XHJcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxufVxyXG5cclxuYSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuYWJiclt0aXRsZV0ge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xyXG59XHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuY29kZSxcclxua2JkLFxyXG5zYW1wIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcclxuICAgIGZvbnQtc2l6ZTogMWVtO1xyXG59XHJcblxyXG5zbWFsbCB7XHJcbiAgICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gICAgZm9udC1zaXplOiA3NSU7XHJcbiAgICBsaW5lLWhlaWdodDogMDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcclxufVxyXG5cclxuc3ViIHtcclxuICAgIGJvdHRvbTogLTAuMjVlbTtcclxufVxyXG5cclxuc3VwIHtcclxuICAgIHRvcDogLTAuNWVtO1xyXG59XHJcblxyXG5pbWcge1xyXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjE1O1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG5idXR0b24sXHJcbmlucHV0IHtcclxuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG5idXR0b24sXHJcbnNlbGVjdCB7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcclxufVxyXG5cclxuYnV0dG9uLFxyXG5bdHlwZT1cImJ1dHRvblwiXSxcclxuW3R5cGU9XCJyZXNldFwiXSxcclxuW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XHJcbn1cclxuXHJcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcclxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuICAgIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcclxufVxyXG5cclxuZmllbGRzZXQge1xyXG4gICAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtO1xyXG59XHJcblxyXG5sZWdlbmQge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgZGlzcGxheTogdGFibGU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxufVxyXG5cclxucHJvZ3Jlc3Mge1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuW3R5cGU9XCJjaGVja2JveFwiXSxcclxuW3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbiAgICBvdXRsaW5lLW9mZnNldDogLTJweDtcclxufVxyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG4gOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcclxuICAgIGZvbnQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbmRldGFpbHMge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbnN1bW1hcnkge1xyXG4gICAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG50ZW1wbGF0ZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG5baGlkZGVuXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59IiwiaHRtbCB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuKixcclxuKjo6YmVmb3JlLFxyXG4qOjphZnRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcblxyXG5pbWcge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcclxufVxyXG5cclxuLnZpc3VhbGx5LWhpZGRlbjpub3QoOmZvY3VzKTpub3QoOmFjdGl2ZSkge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgd2lkdGg6IDFweDtcclxuICAgIGhlaWdodDogMXB4O1xyXG4gICAgbWFyZ2luOiAtMXB4O1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBjbGlwLXBhdGg6IGluc2V0KDEwMCUpO1xyXG4gICAgY2xpcDogcmVjdCgwIDAgMCAwKTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xyXG4gICAgY29sb3I6ICRhY2NlbnQtZGFyaztcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlblxyXG59XHJcblxyXG4uYnV0dG9uLXJlc2V0IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogMTU1MHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAwIDE1cHg7XHJcbiAgICB3aWR0aDogYXV0bztcclxufSIsIi5hcmNoaXZlLWFydGljbGUge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgJl9faW1hZ2UtbGluayB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICAmX19pbWFnZSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyOTBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWcvYXJ0aWNsZS0xLmpwZ1wiKTtcclxuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgfVxyXG4gICAgJl9fZGF0ZSB7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDIwLCAxNik7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgIH1cclxuICAgICZfX3RpdGxlLWxpbmsge1xyXG4gICAgICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCgyNSwgMTgpO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIGNvbG9yOiAkYWNjZW50LWRhcms7XHJcbiAgICB9XHJcbiAgICAmX190aXRsZS1saW5rOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiBpbmhlcml0O1xyXG4gICAgfVxyXG4gICAgJl9fdGl0bGUtbGluazpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6ICRhY2NlbnQ7XHJcbiAgICB9XHJcbiAgICAmX190YWdzIHtcclxuICAgICAgICBAaW5jbHVkZSBsaXN0LXJlc2V0O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMjBweDtcclxuICAgICAgICBsZWZ0OiAyMHB4O1xyXG4gICAgfVxyXG4gICAgJl9fdGFnOm5vdCg6Zmlyc3QtY2hpbGQpIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgIH1cclxuICAgICZfX3RhZyBzcGFuIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgXHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgIGNvbG9yOiAkYWNjZW50O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblxyXG4gICAgICAgIHBhZGRpbmc6IC4xZW0gLjdlbTtcclxuICAgIH1cclxufSIsIi5ibG9nLXdyYXAge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGNvbHVtbi1nYXA6IDIwcHg7XHJcbiAgICByb3ctZ2FwOiA2MHB4O1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMywgbWlubWF4KDMxNXB4LCAxZnIpKTtcclxuICAgIEBpbmNsdWRlIGR0IHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDMxNXB4LCAxZnIpKTtcclxuXHJcbiAgICB9XHJcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4O1xyXG59IiwiLmJ0bi1hY2NlbnQge1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGNvbG9yOiAkYWNjZW50O1xyXG4gICAgcGFkZGluZzogLjllbSAyLjJlbTtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICRhY2NlbnQ7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2UtaW47XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudDtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuXHJcbiAgICAmOmFjdGl2ZSB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudC1kYXJrO1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogJGFjY2VudC1kYXJrO1xyXG4gICAgfVxyXG59IiwiLm1ldGEtdGFncy1uYXYge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIEBpbmNsdWRlIGxpc3QtcmVzZXQ7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgQGluY2x1ZGUgbWQge1xyXG4gICAgICAgICAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19pdGVtOm5vdCg6Zmlyc3QtY2hpbGQpIHtcclxuICAgICAgICBtYXJnaW4tbGVmdDogMTVweDtcclxuICAgICAgICBAaW5jbHVkZSBtZCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICB9XHJcbiAgICAmX19saW5rIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgQGluY2x1ZGUgYWRhcHRpdi1mb250KDIxLCAxOCk7XHJcbiAgICAgICAgcGFkZGluZzogMC4zZW0gMC44ZW07XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAkYWNjZW50LWRhcms7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudDtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZS1pbjtcclxuXHJcbiAgICAgICAgJi0tYWN0aXZlIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudDtcclxuICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWxpZ2h0O1xyXG4gICAgICAgICAgICBjb2xvcjogJGFjY2VudC1kYXJrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5wYWdlLXRpdGxlIHtcclxuICAgIEBpbmNsdWRlIGFkYXB0aXYtZm9udCg1MCwgMzApO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMztcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxufSIsIi5zaG93LW1vcmUtYnRuIHtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNjBweDtcclxufSJdfQ== */